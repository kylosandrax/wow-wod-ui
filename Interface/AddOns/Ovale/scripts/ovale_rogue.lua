local OVALE, Ovale = ...
local OvaleScripts = Ovale.OvaleScripts

-- THE REST OF THIS FILE IS AUTOMATICALLY GENERATED.
-- ANY CHANGES MADE BELOW THIS POINT WILL BE LOST.

do
	local name = "mmo_champion_rogue_assassination_20"
	local desc = "[6.2] MMO-Champion: Rogue_Assassination_2.0"
	local code = [[
# Based on SimulationCraft profile "Rogue_Assassination_2.0".
#	class=rogue
#	spec=assassination
#	talents=3000032
#	glyphs=vendetta/energy/disappearance

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_rogue_spells)

AddCheckBox(opt_melee_range L(not_in_melee_range) specialization=assassination)
AddCheckBox(opt_potion_agility ItemName(draenic_agility_potion) default specialization=assassination)
AddCheckBox(opt_legendary_ring_agility ItemName(legendary_ring_agility) default specialization=assassination)
AddCheckBox(opt_vanish SpellName(vanish) default specialization=assassination)

AddFunction AssassinationUsePotionAgility
{
	if CheckBoxOn(opt_potion_agility) and target.Classification(worldboss) Item(draenic_agility_potion usable=1)
}

AddFunction AssassinationUseItemActions
{
	Item(Trinket0Slot usable=1)
	Item(Trinket1Slot usable=1)
}

### actions.default

AddFunction AssassinationDefaultMainActions
{
	#run_action_list,name=opener_ant,if=(time<5.5&combo_points<5)&talent.anticipation.enabled
	if TimeInCombat() < 5.5 and ComboPoints() < 5 and Talent(anticipation_talent) AssassinationOpenerAntMainActions()
	#run_action_list,name=reflection_rotation_ant_ref,if=buff.shadow_reflection.up&talent.anticipation.enabled&talent.shadow_reflection.enabled
	if BuffPresent(shadow_reflection_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) AssassinationReflectionRotationAntRefMainActions()
	#run_action_list,name=vanish_rotation_ant_ref,if=buff.vanish.up&talent.anticipation.enabled&talent.shadow_reflection.enabled
	if BuffPresent(vanish_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) AssassinationVanishRotationAntRefMainActions()
	#call_action_list,name=cd_controller_ant,if=talent.anticipation.enabled
	if Talent(anticipation_talent) AssassinationCdControllerAntMainActions()
	#run_action_list,name=generators_ant_env,if=talent.anticipation.enabled&buff.envenom.up
	if Talent(anticipation_talent) and BuffPresent(envenom_buff) AssassinationGeneratorsAntEnvMainActions()
	#run_action_list,name=generators_ant,if=talent.anticipation.enabled
	if Talent(anticipation_talent) AssassinationGeneratorsAntMainActions()
}

AddFunction AssassinationDefaultShortCdActions
{
	unless TimeInCombat() < 5.5 and ComboPoints() < 5 and Talent(anticipation_talent) and AssassinationOpenerAntShortCdPostConditions()
	{
		unless BuffPresent(shadow_reflection_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) and AssassinationReflectionRotationAntRefShortCdPostConditions()
		{
			unless BuffPresent(vanish_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) and AssassinationVanishRotationAntRefShortCdPostConditions()
			{
				#call_action_list,name=cd_controller_ant,if=talent.anticipation.enabled
				if Talent(anticipation_talent) AssassinationCdControllerAntShortCdActions()
			}
		}
	}
}

AddFunction AssassinationDefaultCdActions
{
	unless TimeInCombat() < 5.5 and ComboPoints() < 5 and Talent(anticipation_talent) and AssassinationOpenerAntCdPostConditions()
	{
		#run_action_list,name=reflection_rotation_ant_ref,if=buff.shadow_reflection.up&talent.anticipation.enabled&talent.shadow_reflection.enabled
		if BuffPresent(shadow_reflection_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) AssassinationReflectionRotationAntRefCdActions()

		unless BuffPresent(shadow_reflection_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) and AssassinationReflectionRotationAntRefCdPostConditions()
		{
			unless BuffPresent(vanish_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) and AssassinationVanishRotationAntRefCdPostConditions()
			{
				#call_action_list,name=cd_controller_ant,if=talent.anticipation.enabled
				if Talent(anticipation_talent) AssassinationCdControllerAntCdActions()

				unless Talent(anticipation_talent) and AssassinationCdControllerAntCdPostConditions()
				{
					#run_action_list,name=generators_ant_env,if=talent.anticipation.enabled&buff.envenom.up
					if Talent(anticipation_talent) and BuffPresent(envenom_buff) AssassinationGeneratorsAntEnvCdActions()

					unless Talent(anticipation_talent) and BuffPresent(envenom_buff) and AssassinationGeneratorsAntEnvCdPostConditions()
					{
						#run_action_list,name=generators_ant,if=talent.anticipation.enabled
						if Talent(anticipation_talent) AssassinationGeneratorsAntCdActions()
					}
				}
			}
		}
	}
}

### actions.cd_controller_ant

AddFunction AssassinationCdControllerAntMainActions
{
	#call_action_list,name=pool_ant,if=energy+energy.regen*cooldown.vendetta.remains<=105
	if Energy() + EnergyRegenRate() * SpellCooldown(vendetta) <= 105 AssassinationPoolAntMainActions()
}

AddFunction AssassinationCdControllerAntShortCdActions
{
	#vanish,if=energy>13&!buff.stealth.up&combo_points+anticipation_charges<8&buff.blindside.down
	if Energy() > 13 and not BuffPresent(stealthed_buff any=1) and ComboPoints() + BuffStacks(anticipation_buff) < 8 and BuffExpires(blindside_buff) and { CheckBoxOn(opt_vanish) or not SpellCooldown(preparation) > 0 } Spell(vanish)
}

AddFunction AssassinationCdControllerAntCdActions
{
	#shadow_reflection,if=energy>35
	if Energy() > 35 Spell(shadow_reflection)
	#preparation,if=cooldown.vanish.remains>25
	if SpellCooldown(vanish) > 25 Spell(preparation)
	#call_action_list,name=pool_ant,if=energy+energy.regen*cooldown.vendetta.remains<=105
	if Energy() + EnergyRegenRate() * SpellCooldown(vendetta) <= 105 AssassinationPoolAntCdActions()
}

AddFunction AssassinationCdControllerAntCdPostConditions
{
	Energy() + EnergyRegenRate() * SpellCooldown(vendetta) <= 105 and AssassinationPoolAntCdPostConditions()
}

### actions.energy_neutral_finishers

AddFunction AssassinationEnergyNeutralFinishersMainActions
{
	#rupture,cycle_targets=1,if=ticks_remain<3
	if target.TicksRemaining(rupture_debuff) < 3 Spell(rupture)
}

AddFunction AssassinationEnergyNeutralFinishersShortCdPostConditions
{
	target.TicksRemaining(rupture_debuff) < 3 and Spell(rupture)
}

AddFunction AssassinationEnergyNeutralFinishersCdPostConditions
{
	target.TicksRemaining(rupture_debuff) < 3 and Spell(rupture)
}

### actions.finishers

AddFunction AssassinationFinishersMainActions
{
	#rupture,cycle_targets=1,if=ticks_remain<3
	if target.TicksRemaining(rupture_debuff) < 3 Spell(rupture)
	#pool_resource,for_next=1,extra_amount=50
	#death_from_above
	Spell(death_from_above)
	unless SpellUsable(death_from_above) and SpellCooldown(death_from_above) < TimeToEnergy(50)
	{
		#envenom,cycle_targets=1,if=target.health.pct<=35&(energy+energy.regen*cooldown.vendetta.remains>=105&(buff.envenom.remains<=1.8|energy>45))|buff.bloodlust.up|debuff.vendetta.up
		if target.HealthPercent() <= 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 45 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) Spell(envenom)
		#envenom,cycle_targets=1,if=target.health.pct>35&(energy+energy.regen*cooldown.vendetta.remains>=105&(buff.envenom.remains<=1.8|energy>55))|buff.bloodlust.up|debuff.vendetta.up
		if target.HealthPercent() > 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 55 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) Spell(envenom)
	}
}

AddFunction AssassinationFinishersShortCdPostConditions
{
	target.TicksRemaining(rupture_debuff) < 3 and Spell(rupture) or not { SpellUsable(death_from_above) and SpellCooldown(death_from_above) < TimeToEnergy(50) } and { { target.HealthPercent() <= 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 45 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) } and Spell(envenom) or { target.HealthPercent() > 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 55 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) } and Spell(envenom) }
}

AddFunction AssassinationFinishersCdActions
{
	unless target.TicksRemaining(rupture_debuff) < 3 and Spell(rupture)
	{
		#pool_resource,for_next=1,extra_amount=50
		#death_from_above
		unless SpellUsable(death_from_above) and SpellCooldown(death_from_above) < TimeToEnergy(50)
		{
			unless { target.HealthPercent() <= 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 45 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) } and Spell(envenom) or { target.HealthPercent() > 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 55 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) } and Spell(envenom)
			{
				#call_action_list,name=pool_ant_env
				AssassinationPoolAntEnvCdActions()
			}
		}
	}
}

AddFunction AssassinationFinishersCdPostConditions
{
	target.TicksRemaining(rupture_debuff) < 3 and Spell(rupture) or not { SpellUsable(death_from_above) and SpellCooldown(death_from_above) < TimeToEnergy(50) } and { { target.HealthPercent() <= 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 45 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) } and Spell(envenom) or { target.HealthPercent() > 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 55 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) } and Spell(envenom) }
}

### actions.generators_ant

AddFunction AssassinationGeneratorsAntMainActions
{
	#call_action_list,name=finishers,if=combo_points=5
	if ComboPoints() == 5 AssassinationFinishersMainActions()
	#call_action_list,name=energy_neutral_finishers,if=combo_points=5
	if ComboPoints() == 5 AssassinationEnergyNeutralFinishersMainActions()
	#dispatch
	Spell(dispatch)
	#mutilate
	Spell(mutilate)
}

AddFunction AssassinationGeneratorsAntShortCdPostConditions
{
	ComboPoints() == 5 and AssassinationFinishersShortCdPostConditions() or ComboPoints() == 5 and AssassinationEnergyNeutralFinishersShortCdPostConditions() or Spell(dispatch) or Spell(mutilate)
}

AddFunction AssassinationGeneratorsAntCdActions
{
	#call_action_list,name=finishers,if=combo_points=5
	if ComboPoints() == 5 AssassinationFinishersCdActions()
}

AddFunction AssassinationGeneratorsAntCdPostConditions
{
	ComboPoints() == 5 and AssassinationFinishersCdPostConditions() or ComboPoints() == 5 and AssassinationEnergyNeutralFinishersCdPostConditions() or Spell(dispatch) or Spell(mutilate)
}

### actions.generators_ant_env

AddFunction AssassinationGeneratorsAntEnvMainActions
{
	#call_action_list,name=finishers,if=combo_points=5&combo_points+anticipation_charges>=7
	if ComboPoints() == 5 and ComboPoints() + BuffStacks(anticipation_buff) >= 7 AssassinationFinishersMainActions()
	#call_action_list,name=energy_neutral_finishers,if=combo_points=5
	if ComboPoints() == 5 AssassinationEnergyNeutralFinishersMainActions()
	#dispatch
	Spell(dispatch)
	#mutilate
	Spell(mutilate)
}

AddFunction AssassinationGeneratorsAntEnvShortCdPostConditions
{
	ComboPoints() == 5 and ComboPoints() + BuffStacks(anticipation_buff) >= 7 and AssassinationFinishersShortCdPostConditions() or ComboPoints() == 5 and AssassinationEnergyNeutralFinishersShortCdPostConditions() or Spell(dispatch) or Spell(mutilate)
}

AddFunction AssassinationGeneratorsAntEnvCdActions
{
	#call_action_list,name=finishers,if=combo_points=5&combo_points+anticipation_charges>=7
	if ComboPoints() == 5 and ComboPoints() + BuffStacks(anticipation_buff) >= 7 AssassinationFinishersCdActions()
}

AddFunction AssassinationGeneratorsAntEnvCdPostConditions
{
	ComboPoints() == 5 and ComboPoints() + BuffStacks(anticipation_buff) >= 7 and AssassinationFinishersCdPostConditions() or ComboPoints() == 5 and AssassinationEnergyNeutralFinishersCdPostConditions() or Spell(dispatch) or Spell(mutilate)
}

### actions.opener_ant

AddFunction AssassinationOpenerAntMainActions
{
	#mutilate,if=time<1
	if TimeInCombat() < 1 Spell(mutilate)
	#rupture,if=time<2
	if TimeInCombat() < 2 Spell(rupture)
	#dispatch
	Spell(dispatch)
	#mutilate
	Spell(mutilate)
}

AddFunction AssassinationOpenerAntShortCdPostConditions
{
	TimeInCombat() < 1 and Spell(mutilate) or TimeInCombat() < 2 and Spell(rupture) or Spell(dispatch) or Spell(mutilate)
}

AddFunction AssassinationOpenerAntCdPostConditions
{
	TimeInCombat() < 1 and Spell(mutilate) or TimeInCombat() < 2 and Spell(rupture) or Spell(dispatch) or Spell(mutilate)
}

### actions.pool_ant

AddFunction AssassinationPoolAntMainActions
{
	#call_action_list,name=finishers,if=combo_points+anticipation_charges>=8&combo_points=5
	if ComboPoints() + BuffStacks(anticipation_buff) >= 8 and ComboPoints() == 5 AssassinationFinishersMainActions()
}

AddFunction AssassinationPoolAntCdActions
{
	#call_action_list,name=finishers,if=combo_points+anticipation_charges>=8&combo_points=5
	if ComboPoints() + BuffStacks(anticipation_buff) >= 8 and ComboPoints() == 5 AssassinationFinishersCdActions()

	unless ComboPoints() + BuffStacks(anticipation_buff) >= 8 and ComboPoints() == 5 and AssassinationFinishersCdPostConditions()
	{
		#preparation,if=cooldown.vanish.remains>25|target.time_to_die<17&cooldown.vendetta.remains>1
		if SpellCooldown(vanish) > 25 or target.TimeToDie() < 17 and SpellCooldown(vendetta) > 1 Spell(preparation)
	}
}

AddFunction AssassinationPoolAntCdPostConditions
{
	ComboPoints() + BuffStacks(anticipation_buff) >= 8 and ComboPoints() == 5 and AssassinationFinishersCdPostConditions()
}

### actions.pool_ant_env

AddFunction AssassinationPoolAntEnvCdActions
{
	#preparation,if=cooldown.vanish.remains>25|target.time_to_die<17&cooldown.vendetta.remains>1
	if SpellCooldown(vanish) > 25 or target.TimeToDie() < 17 and SpellCooldown(vendetta) > 1 Spell(preparation)
}

### actions.precombat

AddFunction AssassinationPrecombatMainActions
{
	#flask,type=greater_draenic_agility_flask
	#food,type=sleeper_sushi
	#apply_poison,lethal=deadly
	if BuffRemaining(lethal_poison_buff) < 1200 Spell(deadly_poison)
	#stealth
	Spell(stealth)
}

AddFunction AssassinationPrecombatShortCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth)
	{
		#marked_for_death
		Spell(marked_for_death)
	}
}

AddFunction AssassinationPrecombatShortCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth)
}

AddFunction AssassinationPrecombatCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison)
	{
		#snapshot_stats
		#potion,name=draenic_agility
		AssassinationUsePotionAgility()
	}
}

AddFunction AssassinationPrecombatCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth)
}

### actions.reflection_rotation_ant_ref

AddFunction AssassinationReflectionRotationAntRefMainActions
{
	#run_action_list,name=generators_ant_env,if=talent.anticipation.enabled&buff.envenom.up
	if Talent(anticipation_talent) and BuffPresent(envenom_buff) AssassinationGeneratorsAntEnvMainActions()
	#run_action_list,name=generators_ant,if=talent.anticipation.enabled
	if Talent(anticipation_talent) AssassinationGeneratorsAntMainActions()
}

AddFunction AssassinationReflectionRotationAntRefShortCdPostConditions
{
	Talent(anticipation_talent) and BuffPresent(envenom_buff) and AssassinationGeneratorsAntEnvShortCdPostConditions() or Talent(anticipation_talent) and AssassinationGeneratorsAntShortCdPostConditions()
}

AddFunction AssassinationReflectionRotationAntRefCdActions
{
	#potion,name=draenic_agility,if=buff.bloodlust.react|target.time_to_die<40|(buff.shadow_reflection.up|(!talent.shadow_reflection.enabled&buff.vendetta.up))&(trinket.stat.agi.up|trinket.stat.multistrike.up|trinket.stat.crit.up|buff.archmages_greater_incandescence_agi.up)|((buff.shadow_reflection.up|(!talent.shadow_reflection.enabled&buff.vendetta.up))&target.time_to_die<136)
	if BuffPresent(burst_haste_buff any=1) or target.TimeToDie() < 40 or { BuffPresent(shadow_reflection_buff) or not Talent(shadow_reflection_talent) and BuffPresent(vendetta_buff) } and { BuffPresent(trinket_stat_agi_buff) or BuffPresent(trinket_stat_multistrike_buff) or BuffPresent(trinket_stat_crit_buff) or BuffPresent(archmages_greater_incandescence_agi_buff) } or { BuffPresent(shadow_reflection_buff) or not Talent(shadow_reflection_talent) and BuffPresent(vendetta_buff) } and target.TimeToDie() < 136 AssassinationUsePotionAgility()
	#vendetta
	Spell(vendetta)
	#use_item,slot=trinket2
	AssassinationUseItemActions()
	#use_item,slot=finger1
	if CheckBoxOn(opt_legendary_ring_agility) Item(legendary_ring_agility usable=1)
	#Arcane_Torrent,if=energy<90
	if Energy() < 90 Spell(arcane_torrent_energy)
	#blood_fury
	Spell(blood_fury_ap)
	#berserking
	Spell(berserking)
	#run_action_list,name=generators_ant_env,if=talent.anticipation.enabled&buff.envenom.up
	if Talent(anticipation_talent) and BuffPresent(envenom_buff) AssassinationGeneratorsAntEnvCdActions()

	unless Talent(anticipation_talent) and BuffPresent(envenom_buff) and AssassinationGeneratorsAntEnvCdPostConditions()
	{
		#run_action_list,name=generators_ant,if=talent.anticipation.enabled
		if Talent(anticipation_talent) AssassinationGeneratorsAntCdActions()
	}
}

AddFunction AssassinationReflectionRotationAntRefCdPostConditions
{
	Talent(anticipation_talent) and BuffPresent(envenom_buff) and AssassinationGeneratorsAntEnvCdPostConditions() or Talent(anticipation_talent) and AssassinationGeneratorsAntCdPostConditions()
}

### actions.vanish_rotation_ant_ref

AddFunction AssassinationVanishRotationAntRefMainActions
{
	#mutilate
	Spell(mutilate)
}

AddFunction AssassinationVanishRotationAntRefShortCdPostConditions
{
	Spell(mutilate)
}

AddFunction AssassinationVanishRotationAntRefCdPostConditions
{
	Spell(mutilate)
}

### Assassination icons.

AddCheckBox(opt_rogue_assassination_aoe L(AOE) default specialization=assassination)

AddIcon checkbox=!opt_rogue_assassination_aoe enemies=1 help=shortcd specialization=assassination
{
	if not InCombat() AssassinationPrecombatShortCdActions()
	unless not InCombat() and AssassinationPrecombatShortCdPostConditions()
	{
		AssassinationDefaultShortCdActions()
	}
}

AddIcon checkbox=opt_rogue_assassination_aoe help=shortcd specialization=assassination
{
	if not InCombat() AssassinationPrecombatShortCdActions()
	unless not InCombat() and AssassinationPrecombatShortCdPostConditions()
	{
		AssassinationDefaultShortCdActions()
	}
}

AddIcon enemies=1 help=main specialization=assassination
{
	if not InCombat() AssassinationPrecombatMainActions()
	AssassinationDefaultMainActions()
}

AddIcon checkbox=opt_rogue_assassination_aoe help=aoe specialization=assassination
{
	if not InCombat() AssassinationPrecombatMainActions()
	AssassinationDefaultMainActions()
}

AddIcon checkbox=!opt_rogue_assassination_aoe enemies=1 help=cd specialization=assassination
{
	if not InCombat() AssassinationPrecombatCdActions()
	unless not InCombat() and AssassinationPrecombatCdPostConditions()
	{
		AssassinationDefaultCdActions()
	}
}

AddIcon checkbox=opt_rogue_assassination_aoe help=cd specialization=assassination
{
	if not InCombat() AssassinationPrecombatCdActions()
	unless not InCombat() and AssassinationPrecombatCdPostConditions()
	{
		AssassinationDefaultCdActions()
	}
}

### Required symbols
# anticipation_buff
# anticipation_talent
# arcane_torrent_energy
# archmages_greater_incandescence_agi_buff
# berserking
# blindside_buff
# blood_fury_ap
# deadly_poison
# death_from_above
# dispatch
# draenic_agility_potion
# envenom
# envenom_buff
# kick
# legendary_ring_agility
# lethal_poison_buff
# marked_for_death
# mutilate
# preparation
# rupture
# rupture_debuff
# shadow_reflection
# shadow_reflection_buff
# shadow_reflection_talent
# shadowstep
# stealth
# vanish
# vanish_buff
# vendetta
# vendetta_buff
# vendetta_debuff
]]
	OvaleScripts:RegisterScript("ROGUE", "assassination", name, desc, code, "script")
end

do
	local name = "mmo_champion_rogue_combat_t18m"
	local desc = "[6.2] MMO-Champion: Rogue_Combat_T18M"
	local code = [[
# Based on SimulationCraft profile "Rogue_Combat_T18M".
#	class=rogue
#	spec=combat
#	talents=3000021
#	glyphs=energy/disappearance

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_rogue_spells)

AddCheckBox(opt_interrupt L(interrupt) default specialization=combat)
AddCheckBox(opt_melee_range L(not_in_melee_range) specialization=combat)
AddCheckBox(opt_potion_agility ItemName(draenic_agility_potion) default specialization=combat)
AddCheckBox(opt_legendary_ring_agility ItemName(legendary_ring_agility) default specialization=combat)
AddCheckBox(opt_blade_flurry SpellName(blade_flurry) default specialization=combat)
AddCheckBox(opt_vanish SpellName(vanish) default specialization=combat)

AddFunction CombatUsePotionAgility
{
	if CheckBoxOn(opt_potion_agility) and target.Classification(worldboss) Item(draenic_agility_potion usable=1)
}

AddFunction CombatUseItemActions
{
	Item(Trinket0Slot usable=1)
	Item(Trinket1Slot usable=1)
}

AddFunction CombatInterruptActions
{
	if CheckBoxOn(opt_interrupt) and not target.IsFriend() and target.IsInterruptible()
	{
		if target.InRange(kick) Spell(kick)
		if not target.Classification(worldboss)
		{
			if target.InRange(cheap_shot) Spell(cheap_shot)
			if target.InRange(deadly_throw) and ComboPoints() == 5 Spell(deadly_throw)
			if target.InRange(kidney_shot) Spell(kidney_shot)
			Spell(arcane_torrent_energy)
			if target.InRange(quaking_palm) Spell(quaking_palm)
		}
	}
}

### actions.default

AddFunction CombatDefaultMainActions
{
	#ambush
	Spell(ambush)
	#slice_and_dice,if=buff.slice_and_dice.remains<2|((target.time_to_die>45&combo_points=5&buff.slice_and_dice.remains<12)&buff.deep_insight.down)
	if { BuffRemaining(slice_and_dice_buff) < 2 or target.TimeToDie() > 45 and ComboPoints() == 5 and BuffRemaining(slice_and_dice_buff) < 12 and BuffExpires(deep_insight_buff) } and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) Spell(slice_and_dice)
	#call_action_list,name=generator,if=combo_points<5|!dot.revealing_strike.ticking|(talent.anticipation.enabled&anticipation_charges<3&buff.deep_insight.down)
	if ComboPoints() < 5 or not target.DebuffPresent(revealing_strike_debuff) or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 3 and BuffExpires(deep_insight_buff) CombatGeneratorMainActions()
	#call_action_list,name=finisher,if=combo_points=5&dot.revealing_strike.ticking&(buff.deep_insight.up|!talent.anticipation.enabled|(talent.anticipation.enabled&anticipation_charges>=3))
	if ComboPoints() == 5 and target.DebuffPresent(revealing_strike_debuff) and { BuffPresent(deep_insight_buff) or not Talent(anticipation_talent) or Talent(anticipation_talent) and BuffStacks(anticipation_buff) >= 3 } CombatFinisherMainActions()
}

AddFunction CombatDefaultShortCdActions
{
	#blade_flurry,if=(active_enemies>=2&!buff.blade_flurry.up)|(active_enemies<2&buff.blade_flurry.up)
	if { Enemies() >= 2 and not BuffPresent(blade_flurry_buff) or Enemies() < 2 and BuffPresent(blade_flurry_buff) } and CheckBoxOn(opt_blade_flurry) Spell(blade_flurry)

	unless Spell(ambush)
	{
		#vanish,if=time>10&(combo_points<3|(talent.anticipation.enabled&anticipation_charges<3)|(combo_points<4|(talent.anticipation.enabled&anticipation_charges<4)))&((talent.shadow_focus.enabled&buff.adrenaline_rush.down&energy<90&energy>=15)|(talent.subterfuge.enabled&energy>=90)|(!talent.shadow_focus.enabled&!talent.subterfuge.enabled&energy>=60))
		if TimeInCombat() > 10 and { ComboPoints() < 3 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 3 or ComboPoints() < 4 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 4 } and { Talent(shadow_focus_talent) and BuffExpires(adrenaline_rush_buff) and Energy() < 90 and Energy() >= 15 or Talent(subterfuge_talent) and Energy() >= 90 or not Talent(shadow_focus_talent) and not Talent(subterfuge_talent) and Energy() >= 60 } and { CheckBoxOn(opt_vanish) or not SpellCooldown(preparation) > 0 } Spell(vanish)

		unless { BuffRemaining(slice_and_dice_buff) < 2 or target.TimeToDie() > 45 and ComboPoints() == 5 and BuffRemaining(slice_and_dice_buff) < 12 and BuffExpires(deep_insight_buff) } and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) and Spell(slice_and_dice)
		{
			#marked_for_death,if=combo_points<=1&dot.revealing_strike.ticking&(!talent.shadow_reflection.enabled|buff.shadow_reflection.up|cooldown.shadow_reflection.remains>30)
			if ComboPoints() <= 1 and target.DebuffPresent(revealing_strike_debuff) and { not Talent(shadow_reflection_talent) or BuffPresent(shadow_reflection_buff) or SpellCooldown(shadow_reflection) > 30 } Spell(marked_for_death)
		}
	}
}

AddFunction CombatDefaultCdActions
{
	#potion,name=draenic_agility,if=buff.bloodlust.react|target.time_to_die<40|(buff.adrenaline_rush.up&buff.maalus.up&(trinket.proc.any.react|trinket.stacking_proc.any.react|buff.archmages_greater_incandescence_agi.react))
	if BuffPresent(burst_haste_buff any=1) or target.TimeToDie() < 40 or BuffPresent(adrenaline_rush_buff) and BuffPresent(maalus_buff) and { BuffPresent(trinket_proc_any_buff) or BuffPresent(trinket_stacking_proc_any_buff) or BuffPresent(archmages_greater_incandescence_agi_buff) } CombatUsePotionAgility()
	#kick
	CombatInterruptActions()
	#preparation,if=!buff.vanish.up&cooldown.vanish.remains>30
	if not BuffPresent(vanish_buff) and SpellCooldown(vanish) > 30 Spell(preparation)
	#use_item,slot=finger1,if=buff.adrenaline_rush.up
	if BuffPresent(adrenaline_rush_buff) and CheckBoxOn(opt_legendary_ring_agility) Item(legendary_ring_agility usable=1)
	#use_item,slot=trinket2,if=buff.adrenaline_rush.up
	if BuffPresent(adrenaline_rush_buff) CombatUseItemActions()
	#blood_fury
	Spell(blood_fury_ap)
	#berserking
	Spell(berserking)
	#arcane_torrent,if=energy<60
	if Energy() < 60 Spell(arcane_torrent_energy)
	#shadow_reflection,if=(cooldown.killing_spree.remains<10&combo_points>3)|buff.adrenaline_rush.up
	if SpellCooldown(killing_spree) < 10 and ComboPoints() > 3 or BuffPresent(adrenaline_rush_buff) Spell(shadow_reflection)

	unless Spell(ambush) or { BuffRemaining(slice_and_dice_buff) < 2 or target.TimeToDie() > 45 and ComboPoints() == 5 and BuffRemaining(slice_and_dice_buff) < 12 and BuffExpires(deep_insight_buff) } and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) and Spell(slice_and_dice)
	{
		#call_action_list,name=adrenaline_rush
		CombatAdrenalineRushCdActions()
		#call_action_list,name=killing_spree,if=(energy<40|(buff.bloodlust.up&time<10)|buff.bloodlust.remains>20)&(!talent.shadow_reflection.enabled|cooldown.shadow_reflection.remains>30|buff.shadow_reflection.remains>3)
		if { Energy() < 40 or BuffPresent(burst_haste_buff any=1) and TimeInCombat() < 10 or BuffRemaining(burst_haste_buff any=1) > 20 } and { not Talent(shadow_reflection_talent) or SpellCooldown(shadow_reflection) > 30 or BuffRemaining(shadow_reflection_buff) > 3 } CombatKillingSpreeCdActions()
	}
}

### actions.adrenaline_rush

AddFunction CombatAdrenalineRushCdActions
{
	#adrenaline_rush,if=target.time_to_die>=44
	if target.TimeToDie() >= 44 Spell(adrenaline_rush)
	#adrenaline_rush,if=target.time_to_die<44&(buff.archmages_greater_incandescence_agi.react|trinket.proc.any.react|trinket.stacking_proc.any.react)
	if target.TimeToDie() < 44 and { BuffPresent(archmages_greater_incandescence_agi_buff) or BuffPresent(trinket_proc_any_buff) or BuffPresent(trinket_stacking_proc_any_buff) } Spell(adrenaline_rush)
	#adrenaline_rush,if=target.time_to_die<=buff.adrenaline_rush.duration*1.5
	if target.TimeToDie() <= BaseDuration(adrenaline_rush_buff) * 1.5 Spell(adrenaline_rush)
}

### actions.finisher

AddFunction CombatFinisherMainActions
{
	#death_from_above
	Spell(death_from_above)
	#eviscerate,if=(!talent.death_from_above.enabled|cooldown.death_from_above.remains)
	if not Talent(death_from_above_talent) or SpellCooldown(death_from_above) > 0 Spell(eviscerate)
}

### actions.generator

AddFunction CombatGeneratorMainActions
{
	#revealing_strike,if=(combo_points=4&dot.revealing_strike.remains<7.2&(target.time_to_die>dot.revealing_strike.remains+7.2)|(target.time_to_die<dot.revealing_strike.remains+7.2&ticks_remain<2))|!ticking
	if ComboPoints() == 4 and target.DebuffRemaining(revealing_strike_debuff) < 7.2 and target.TimeToDie() > target.DebuffRemaining(revealing_strike_debuff) + 7.2 or target.TimeToDie() < target.DebuffRemaining(revealing_strike_debuff) + 7.2 and target.TicksRemaining(revealing_strike_debuff) < 2 or not target.DebuffPresent(revealing_strike_debuff) Spell(revealing_strike)
	#sinister_strike,if=dot.revealing_strike.ticking
	if target.DebuffPresent(revealing_strike_debuff) Spell(sinister_strike)
}

### actions.killing_spree

AddFunction CombatKillingSpreeCdActions
{
	#killing_spree,if=target.time_to_die>=44
	if target.TimeToDie() >= 44 Spell(killing_spree)
	#killing_spree,if=target.time_to_die<44&buff.archmages_greater_incandescence_agi.react&buff.archmages_greater_incandescence_agi.remains>=buff.killing_spree.duration
	if target.TimeToDie() < 44 and BuffPresent(archmages_greater_incandescence_agi_buff) and BuffRemaining(archmages_greater_incandescence_agi_buff) >= BaseDuration(killing_spree_buff) Spell(killing_spree)
	#killing_spree,if=target.time_to_die<44&trinket.proc.any.react&trinket.proc.any.remains>=buff.killing_spree.duration
	if target.TimeToDie() < 44 and BuffPresent(trinket_proc_any_buff) and BuffRemaining(trinket_proc_any_buff) >= BaseDuration(killing_spree_buff) Spell(killing_spree)
	#killing_spree,if=target.time_to_die<44&trinket.stacking_proc.any.react&trinket.stacking_proc.any.remains>=buff.killing_spree.duration
	if target.TimeToDie() < 44 and BuffPresent(trinket_stacking_proc_any_buff) and BuffRemaining(trinket_stacking_proc_any_buff) >= BaseDuration(killing_spree_buff) Spell(killing_spree)
	#killing_spree,if=target.time_to_die<=buff.killing_spree.duration*1.5
	if target.TimeToDie() <= BaseDuration(killing_spree_buff) * 1.5 Spell(killing_spree)
}

### actions.precombat

AddFunction CombatPrecombatMainActions
{
	#flask,type=greater_draenic_agility_flask
	#food,type=felmouth_frenzy
	#apply_poison,lethal=deadly
	if BuffRemaining(lethal_poison_buff) < 1200 Spell(deadly_poison)
	#stealth
	Spell(stealth)
	#slice_and_dice,if=talent.marked_for_death.enabled
	if Talent(marked_for_death_talent) and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) Spell(slice_and_dice)
}

AddFunction CombatPrecombatShortCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth)
	{
		#marked_for_death
		Spell(marked_for_death)
	}
}

AddFunction CombatPrecombatShortCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth) or Talent(marked_for_death_talent) and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) and Spell(slice_and_dice)
}

AddFunction CombatPrecombatCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison)
	{
		#snapshot_stats
		#potion,name=draenic_agility
		CombatUsePotionAgility()
	}
}

AddFunction CombatPrecombatCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth) or Talent(marked_for_death_talent) and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) and Spell(slice_and_dice)
}

### Combat icons.

AddCheckBox(opt_rogue_combat_aoe L(AOE) default specialization=combat)

AddIcon checkbox=!opt_rogue_combat_aoe enemies=1 help=shortcd specialization=combat
{
	if not InCombat() CombatPrecombatShortCdActions()
	unless not InCombat() and CombatPrecombatShortCdPostConditions()
	{
		CombatDefaultShortCdActions()
	}
}

AddIcon checkbox=opt_rogue_combat_aoe help=shortcd specialization=combat
{
	if not InCombat() CombatPrecombatShortCdActions()
	unless not InCombat() and CombatPrecombatShortCdPostConditions()
	{
		CombatDefaultShortCdActions()
	}
}

AddIcon enemies=1 help=main specialization=combat
{
	if not InCombat() CombatPrecombatMainActions()
	CombatDefaultMainActions()
}

AddIcon checkbox=opt_rogue_combat_aoe help=aoe specialization=combat
{
	if not InCombat() CombatPrecombatMainActions()
	CombatDefaultMainActions()
}

AddIcon checkbox=!opt_rogue_combat_aoe enemies=1 help=cd specialization=combat
{
	if not InCombat() CombatPrecombatCdActions()
	unless not InCombat() and CombatPrecombatCdPostConditions()
	{
		CombatDefaultCdActions()
	}
}

AddIcon checkbox=opt_rogue_combat_aoe help=cd specialization=combat
{
	if not InCombat() CombatPrecombatCdActions()
	unless not InCombat() and CombatPrecombatCdPostConditions()
	{
		CombatDefaultCdActions()
	}
}

### Required symbols
# adrenaline_rush
# adrenaline_rush_buff
# ambush
# anticipation_buff
# anticipation_talent
# arcane_torrent_energy
# archmages_greater_incandescence_agi_buff
# berserking
# blade_flurry
# blade_flurry_buff
# blood_fury_ap
# cheap_shot
# deadly_poison
# deadly_throw
# death_from_above
# death_from_above_talent
# deep_insight_buff
# draenic_agility_potion
# eviscerate
# kick
# kidney_shot
# killing_spree
# killing_spree_buff
# legendary_ring_agility
# lethal_poison_buff
# maalus_buff
# marked_for_death
# marked_for_death_talent
# preparation
# quaking_palm
# revealing_strike
# revealing_strike_debuff
# shadow_focus_talent
# shadow_reflection
# shadow_reflection_buff
# shadow_reflection_talent
# shadowstep
# sinister_strike
# slice_and_dice
# slice_and_dice_buff
# stealth
# subterfuge_talent
# vanish
# vanish_buff
]]
	OvaleScripts:RegisterScript("ROGUE", "combat", name, desc, code, "script")
end

do
	local name = "mmo_champion_rogue_subtlety_17"
	local desc = "[6.2] MMO-Champion: Rogue_Subtlety_1.7"
	local code = [[
# Based on SimulationCraft profile "Rogue_Subtlety_1.7".
#	class=rogue
#	spec=subtlety
#	talents=2000032
#	glyphs=energy/hemorrhaging_veins/vanish

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_rogue_spells)

Define(honor_among_thieves_cooldown_buff 51699)
	SpellInfo(honor_among_thieves_cooldown_buff duration=2.2)

AddCheckBox(opt_melee_range L(not_in_melee_range) specialization=subtlety)
AddCheckBox(opt_potion_agility ItemName(draenic_agility_potion) default specialization=subtlety)
AddCheckBox(opt_legendary_ring_agility ItemName(legendary_ring_agility) default specialization=subtlety)

AddFunction SubtletyUsePotionAgility
{
	if CheckBoxOn(opt_potion_agility) and target.Classification(worldboss) Item(draenic_agility_potion usable=1)
}

AddFunction SubtletyUseItemActions
{
	Item(Trinket0Slot usable=1)
	Item(Trinket1Slot usable=1)
}

### actions.default

AddFunction SubtletyDefaultMainActions
{
	#run_action_list,name=opener_ant,if=time<2&!buff.shadow_dance.up&talent.anticipation.enabled
	if TimeInCombat() < 2 and not BuffPresent(shadow_dance_buff) and Talent(anticipation_talent) SubtletyOpenerAntMainActions()
	#run_action_list,name=opener_mfd,if=time<3.1&talent.marked_for_death.enabled
	if TimeInCombat() < 3.1 and Talent(marked_for_death_talent) SubtletyOpenerMfdMainActions()
	#run_action_list,name=dance_rotation_ant_ref,if=buff.shadow_dance.up&talent.anticipation.enabled&talent.shadow_reflection.enabled
	if BuffPresent(shadow_dance_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) SubtletyDanceRotationAntRefMainActions()
	#run_action_list,name=dance_rotation_mfd_ref,if=buff.shadow_dance.up&talent.marked_for_death.enabled&talent.shadow_reflection.enabled
	if BuffPresent(shadow_dance_buff) and Talent(marked_for_death_talent) and Talent(shadow_reflection_talent) SubtletyDanceRotationMfdRefMainActions()
	#run_action_list,name=vanish_rotation_ant_ref,if=(buff.vanish.up|buff.subterfuge.up)&talent.anticipation.enabled&talent.shadow_reflection.enabled
	if { BuffPresent(vanish_buff) or BuffPresent(subterfuge_buff) } and Talent(anticipation_talent) and Talent(shadow_reflection_talent) SubtletyVanishRotationAntRefMainActions()
	#run_action_list,name=vanish_rotation_mfd_ref,if=(buff.vanish.up|buff.subterfuge.up)&talent.marked_for_death.enabled&talent.shadow_reflection.enabled
	if { BuffPresent(vanish_buff) or BuffPresent(subterfuge_buff) } and Talent(marked_for_death_talent) and Talent(shadow_reflection_talent) SubtletyVanishRotationMfdRefMainActions()
	#run_action_list,name=shadowmeld_rotation,if=buff.shadowmeld.up
	if BuffPresent(shadowmeld_buff) SubtletyShadowmeldRotationMainActions()
	#call_action_list,name=cd_controller_ant,if=talent.anticipation.enabled
	if Talent(anticipation_talent) SubtletyCdControllerAntMainActions()
	#call_action_list,name=cd_controller_mfd,if=talent.marked_for_death.enabled
	if Talent(marked_for_death_talent) SubtletyCdControllerMfdMainActions()
	#run_action_list,name=generators_fw_ant,if=(debuff.find_weakness.up|trinket.proc.any.react|trinket.stacking_proc.any.react|buff.archmages_greater_incandescence_agi.react)&talent.anticipation.enabled
	if { target.DebuffPresent(find_weakness_debuff) or BuffPresent(trinket_proc_any_buff) or BuffPresent(trinket_stacking_proc_any_buff) or BuffPresent(archmages_greater_incandescence_agi_buff) } and Talent(anticipation_talent) SubtletyGeneratorsFwAntMainActions()
	#run_action_list,name=generators_fw_mfd,if=(debuff.find_weakness.up|trinket.proc.any.react|trinket.stacking_proc.any.react|buff.archmages_greater_incandescence_agi.react)&talent.marked_for_death.enabled
	if { target.DebuffPresent(find_weakness_debuff) or BuffPresent(trinket_proc_any_buff) or BuffPresent(trinket_stacking_proc_any_buff) or BuffPresent(archmages_greater_incandescence_agi_buff) } and Talent(marked_for_death_talent) SubtletyGeneratorsFwMfdMainActions()
	#run_action_list,name=generators_ant,if=talent.anticipation.enabled
	if Talent(anticipation_talent) SubtletyGeneratorsAntMainActions()
	#run_action_list,name=generators_mfd,if=talent.marked_for_death.enabled
	if Talent(marked_for_death_talent) SubtletyGeneratorsMfdMainActions()
}

AddFunction SubtletyDefaultShortCdActions
{
	#run_action_list,name=opener_ant,if=time<2&!buff.shadow_dance.up&talent.anticipation.enabled
	if TimeInCombat() < 2 and not BuffPresent(shadow_dance_buff) and Talent(anticipation_talent) SubtletyOpenerAntShortCdActions()

	unless TimeInCombat() < 2 and not BuffPresent(shadow_dance_buff) and Talent(anticipation_talent) and SubtletyOpenerAntShortCdPostConditions()
	{
		unless TimeInCombat() < 3.1 and Talent(marked_for_death_talent) and SubtletyOpenerMfdShortCdPostConditions()
		{
			#run_action_list,name=dance_rotation_ant_ref,if=buff.shadow_dance.up&talent.anticipation.enabled&talent.shadow_reflection.enabled
			if BuffPresent(shadow_dance_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) SubtletyDanceRotationAntRefShortCdActions()

			unless BuffPresent(shadow_dance_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) and SubtletyDanceRotationAntRefShortCdPostConditions()
			{
				#run_action_list,name=dance_rotation_mfd_ref,if=buff.shadow_dance.up&talent.marked_for_death.enabled&talent.shadow_reflection.enabled
				if BuffPresent(shadow_dance_buff) and Talent(marked_for_death_talent) and Talent(shadow_reflection_talent) SubtletyDanceRotationMfdRefShortCdActions()

				unless BuffPresent(shadow_dance_buff) and Talent(marked_for_death_talent) and Talent(shadow_reflection_talent) and SubtletyDanceRotationMfdRefShortCdPostConditions()
				{
					unless { BuffPresent(vanish_buff) or BuffPresent(subterfuge_buff) } and Talent(anticipation_talent) and Talent(shadow_reflection_talent) and SubtletyVanishRotationAntRefShortCdPostConditions()
					{
						unless { BuffPresent(vanish_buff) or BuffPresent(subterfuge_buff) } and Talent(marked_for_death_talent) and Talent(shadow_reflection_talent) and SubtletyVanishRotationMfdRefShortCdPostConditions()
						{
							unless BuffPresent(shadowmeld_buff) and SubtletyShadowmeldRotationShortCdPostConditions()
							{
								#call_action_list,name=cd_controller_ant,if=talent.anticipation.enabled
								if Talent(anticipation_talent) SubtletyCdControllerAntShortCdActions()

								unless Talent(anticipation_talent) and SubtletyCdControllerAntShortCdPostConditions()
								{
									#call_action_list,name=cd_controller_mfd,if=talent.marked_for_death.enabled
									if Talent(marked_for_death_talent) SubtletyCdControllerMfdShortCdActions()

									unless Talent(marked_for_death_talent) and SubtletyCdControllerMfdShortCdPostConditions()
									{
										unless { target.DebuffPresent(find_weakness_debuff) or BuffPresent(trinket_proc_any_buff) or BuffPresent(trinket_stacking_proc_any_buff) or BuffPresent(archmages_greater_incandescence_agi_buff) } and Talent(anticipation_talent) and SubtletyGeneratorsFwAntShortCdPostConditions()
										{
											#run_action_list,name=generators_fw_mfd,if=(debuff.find_weakness.up|trinket.proc.any.react|trinket.stacking_proc.any.react|buff.archmages_greater_incandescence_agi.react)&talent.marked_for_death.enabled
											if { target.DebuffPresent(find_weakness_debuff) or BuffPresent(trinket_proc_any_buff) or BuffPresent(trinket_stacking_proc_any_buff) or BuffPresent(archmages_greater_incandescence_agi_buff) } and Talent(marked_for_death_talent) SubtletyGeneratorsFwMfdShortCdActions()
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

AddFunction SubtletyDefaultCdActions
{
	#run_action_list,name=opener_ant,if=time<2&!buff.shadow_dance.up&talent.anticipation.enabled
	if TimeInCombat() < 2 and not BuffPresent(shadow_dance_buff) and Talent(anticipation_talent) SubtletyOpenerAntCdActions()

	unless TimeInCombat() < 2 and not BuffPresent(shadow_dance_buff) and Talent(anticipation_talent) and SubtletyOpenerAntCdPostConditions()
	{
		unless TimeInCombat() < 3.1 and Talent(marked_for_death_talent) and SubtletyOpenerMfdCdPostConditions()
		{
			#run_action_list,name=dance_rotation_ant_ref,if=buff.shadow_dance.up&talent.anticipation.enabled&talent.shadow_reflection.enabled
			if BuffPresent(shadow_dance_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) SubtletyDanceRotationAntRefCdActions()

			unless BuffPresent(shadow_dance_buff) and Talent(anticipation_talent) and Talent(shadow_reflection_talent) and SubtletyDanceRotationAntRefCdPostConditions()
			{
				#run_action_list,name=dance_rotation_mfd_ref,if=buff.shadow_dance.up&talent.marked_for_death.enabled&talent.shadow_reflection.enabled
				if BuffPresent(shadow_dance_buff) and Talent(marked_for_death_talent) and Talent(shadow_reflection_talent) SubtletyDanceRotationMfdRefCdActions()

				unless BuffPresent(shadow_dance_buff) and Talent(marked_for_death_talent) and Talent(shadow_reflection_talent) and SubtletyDanceRotationMfdRefCdPostConditions()
				{
					unless { BuffPresent(vanish_buff) or BuffPresent(subterfuge_buff) } and Talent(anticipation_talent) and Talent(shadow_reflection_talent) and SubtletyVanishRotationAntRefCdPostConditions()
					{
						#run_action_list,name=vanish_rotation_mfd_ref,if=(buff.vanish.up|buff.subterfuge.up)&talent.marked_for_death.enabled&talent.shadow_reflection.enabled
						if { BuffPresent(vanish_buff) or BuffPresent(subterfuge_buff) } and Talent(marked_for_death_talent) and Talent(shadow_reflection_talent) SubtletyVanishRotationMfdRefCdActions()

						unless { BuffPresent(vanish_buff) or BuffPresent(subterfuge_buff) } and Talent(marked_for_death_talent) and Talent(shadow_reflection_talent) and SubtletyVanishRotationMfdRefCdPostConditions()
						{
							unless BuffPresent(shadowmeld_buff) and SubtletyShadowmeldRotationCdPostConditions()
							{
								#call_action_list,name=cd_controller_ant,if=talent.anticipation.enabled
								if Talent(anticipation_talent) SubtletyCdControllerAntCdActions()

								unless Talent(anticipation_talent) and SubtletyCdControllerAntCdPostConditions()
								{
									#call_action_list,name=cd_controller_mfd,if=talent.marked_for_death.enabled
									if Talent(marked_for_death_talent) SubtletyCdControllerMfdCdActions()
								}
							}
						}
					}
				}
			}
		}
	}
}

### actions.cd_controller_ant

AddFunction SubtletyCdControllerAntMainActions
{
	#call_action_list,name=pool_ant,if=energy+energy.regen*cooldown.shadow_dance.remains<=120
	if Energy() + EnergyRegenRate() * SpellCooldown(shadow_dance) <= 120 SubtletyPoolAntMainActions()
	#call_action_list,name=pool_ant,if=(energy<99&cooldown.vanish.up)&!debuff.find_weakness.up
	if Energy() < 99 and not SpellCooldown(vanish) > 0 and not target.DebuffPresent(find_weakness_debuff) SubtletyPoolAntMainActions()
	#call_action_list,name=pool_ant,if=(energy+energy.regen*cooldown.vanish.remains<=79&cooldown.shadow_dance.remains-15>cooldown.vanish.remains)&!debuff.find_weakness.up
	if Energy() + EnergyRegenRate() * SpellCooldown(vanish) <= 79 and SpellCooldown(shadow_dance) - 15 > SpellCooldown(vanish) and not target.DebuffPresent(find_weakness_debuff) SubtletyPoolAntMainActions()
}

AddFunction SubtletyCdControllerAntShortCdActions
{
	#shadow_dance
	Spell(shadow_dance)
	#vanish,if=combo_points+anticipation_charges<=5
	if ComboPoints() + BuffStacks(anticipation_buff) <= 5 Spell(vanish)
	#vanish,if=target.time_to_die<16
	if target.TimeToDie() < 16 Spell(vanish)
}

AddFunction SubtletyCdControllerAntShortCdPostConditions
{
	Energy() + EnergyRegenRate() * SpellCooldown(shadow_dance) <= 120 and SubtletyPoolAntShortCdPostConditions() or Energy() < 99 and not SpellCooldown(vanish) > 0 and not target.DebuffPresent(find_weakness_debuff) and SubtletyPoolAntShortCdPostConditions() or Energy() + EnergyRegenRate() * SpellCooldown(vanish) <= 79 and SpellCooldown(shadow_dance) - 15 > SpellCooldown(vanish) and not target.DebuffPresent(find_weakness_debuff) and SubtletyPoolAntShortCdPostConditions()
}

AddFunction SubtletyCdControllerAntCdActions
{
	#shadowmeld,if=energy>60&debuff.find_weakness.down&cooldown.shadow_dance.remains>10&cooldown.vanish.remains>10&combo_points<=3
	if Energy() > 60 and target.DebuffExpires(find_weakness_debuff) and SpellCooldown(shadow_dance) > 10 and SpellCooldown(vanish) > 10 and ComboPoints() <= 3 Spell(shadowmeld)
	#preparation,if=cooldown.vanish.remains|target.time_to_die<17
	if SpellCooldown(vanish) > 0 or target.TimeToDie() < 17 Spell(preparation)
	#call_action_list,name=pool_ant,if=energy+energy.regen*cooldown.shadow_dance.remains<=120
	if Energy() + EnergyRegenRate() * SpellCooldown(shadow_dance) <= 120 SubtletyPoolAntCdActions()

	unless Energy() + EnergyRegenRate() * SpellCooldown(shadow_dance) <= 120 and SubtletyPoolAntCdPostConditions()
	{
		#call_action_list,name=pool_ant,if=(energy<99&cooldown.vanish.up)&!debuff.find_weakness.up
		if Energy() < 99 and not SpellCooldown(vanish) > 0 and not target.DebuffPresent(find_weakness_debuff) SubtletyPoolAntCdActions()

		unless Energy() < 99 and not SpellCooldown(vanish) > 0 and not target.DebuffPresent(find_weakness_debuff) and SubtletyPoolAntCdPostConditions()
		{
			#call_action_list,name=pool_ant,if=(energy+energy.regen*cooldown.vanish.remains<=79&cooldown.shadow_dance.remains-15>cooldown.vanish.remains)&!debuff.find_weakness.up
			if Energy() + EnergyRegenRate() * SpellCooldown(vanish) <= 79 and SpellCooldown(shadow_dance) - 15 > SpellCooldown(vanish) and not target.DebuffPresent(find_weakness_debuff) SubtletyPoolAntCdActions()
		}
	}
}

AddFunction SubtletyCdControllerAntCdPostConditions
{
	Energy() + EnergyRegenRate() * SpellCooldown(shadow_dance) <= 120 and SubtletyPoolAntCdPostConditions() or Energy() < 99 and not SpellCooldown(vanish) > 0 and not target.DebuffPresent(find_weakness_debuff) and SubtletyPoolAntCdPostConditions() or Energy() + EnergyRegenRate() * SpellCooldown(vanish) <= 79 and SpellCooldown(shadow_dance) - 15 > SpellCooldown(vanish) and not target.DebuffPresent(find_weakness_debuff) and SubtletyPoolAntCdPostConditions()
}

### actions.cd_controller_mfd

AddFunction SubtletyCdControllerMfdMainActions
{
	#call_action_list,name=pool_mfd,if=energy+energy.regen*cooldown.shadow_dance.remains<=60
	if Energy() + EnergyRegenRate() * SpellCooldown(shadow_dance) <= 60 SubtletyPoolMfdMainActions()
	#call_action_list,name=pool_mfd,if=(energy<99&cooldown.vanish.up)&debuff.find_weakness.remains<5
	if Energy() < 99 and not SpellCooldown(vanish) > 0 and target.DebuffRemaining(find_weakness_debuff) < 5 SubtletyPoolMfdMainActions()
	#call_action_list,name=pool_mfd,if=(energy+energy.regen*cooldown.vanish.remains<=79&cooldown.shadow_dance.remains-15>cooldown.vanish.remains)&debuff.find_weakness.remains<5
	if Energy() + EnergyRegenRate() * SpellCooldown(vanish) <= 79 and SpellCooldown(shadow_dance) - 15 > SpellCooldown(vanish) and target.DebuffRemaining(find_weakness_debuff) < 5 SubtletyPoolMfdMainActions()
}

AddFunction SubtletyCdControllerMfdShortCdActions
{
	#shadow_dance
	Spell(shadow_dance)
	#vanish,if=energy>99&debuff.find_weakness.down&cooldown.shadow_dance.remains>15&((combo_points=1&cooldown.honor_among_thieves.remains<1)|(combo_points=2))
	if Energy() > 99 and target.DebuffExpires(find_weakness_debuff) and SpellCooldown(shadow_dance) > 15 and { ComboPoints() == 1 and BuffRemaining(honor_among_thieves_cooldown_buff) < 1 or ComboPoints() == 2 } Spell(vanish)
	#vanish,if=target.time_to_die<16
	if target.TimeToDie() < 16 Spell(vanish)
}

AddFunction SubtletyCdControllerMfdShortCdPostConditions
{
	Energy() + EnergyRegenRate() * SpellCooldown(shadow_dance) <= 60 and SubtletyPoolMfdShortCdPostConditions() or Energy() < 99 and not SpellCooldown(vanish) > 0 and target.DebuffRemaining(find_weakness_debuff) < 5 and SubtletyPoolMfdShortCdPostConditions() or Energy() + EnergyRegenRate() * SpellCooldown(vanish) <= 79 and SpellCooldown(shadow_dance) - 15 > SpellCooldown(vanish) and target.DebuffRemaining(find_weakness_debuff) < 5 and SubtletyPoolMfdShortCdPostConditions()
}

AddFunction SubtletyCdControllerMfdCdActions
{
	#shadowmeld,if=energy>60&debuff.find_weakness.down&cooldown.shadow_dance.remains>10&cooldown.vanish.remains>10&combo_points<=1
	if Energy() > 60 and target.DebuffExpires(find_weakness_debuff) and SpellCooldown(shadow_dance) > 10 and SpellCooldown(vanish) > 10 and ComboPoints() <= 1 Spell(shadowmeld)
	#preparation,if=cooldown.vanish.remains>60|target.time_to_die<17
	if SpellCooldown(vanish) > 60 or target.TimeToDie() < 17 Spell(preparation)
	#call_action_list,name=pool_mfd,if=energy+energy.regen*cooldown.shadow_dance.remains<=60
	if Energy() + EnergyRegenRate() * SpellCooldown(shadow_dance) <= 60 SubtletyPoolMfdCdActions()

	unless Energy() + EnergyRegenRate() * SpellCooldown(shadow_dance) <= 60 and SubtletyPoolMfdCdPostConditions()
	{
		#call_action_list,name=pool_mfd,if=(energy<99&cooldown.vanish.up)&debuff.find_weakness.remains<5
		if Energy() < 99 and not SpellCooldown(vanish) > 0 and target.DebuffRemaining(find_weakness_debuff) < 5 SubtletyPoolMfdCdActions()

		unless Energy() < 99 and not SpellCooldown(vanish) > 0 and target.DebuffRemaining(find_weakness_debuff) < 5 and SubtletyPoolMfdCdPostConditions()
		{
			#call_action_list,name=pool_mfd,if=(energy+energy.regen*cooldown.vanish.remains<=79&cooldown.shadow_dance.remains-15>cooldown.vanish.remains)&debuff.find_weakness.remains<5
			if Energy() + EnergyRegenRate() * SpellCooldown(vanish) <= 79 and SpellCooldown(shadow_dance) - 15 > SpellCooldown(vanish) and target.DebuffRemaining(find_weakness_debuff) < 5 SubtletyPoolMfdCdActions()
		}
	}
}

### actions.dance_rotation_ant_ref

AddFunction SubtletyDanceRotationAntRefMainActions
{
	#premeditation,if=(combo_points=3&anticipation_charges=3&cooldown.honor_among_thieves.remains>1)|(combo_points<=3&anticipation_charges+combo_points<=5)
	if { ComboPoints() == 3 and BuffStacks(anticipation_buff) == 3 and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 or ComboPoints() <= 3 and BuffStacks(anticipation_buff) + ComboPoints() <= 5 } and ComboPoints() < 5 Spell(premeditation)
	#ambush,if=buff.shadow_dance.remains<=0.1
	if BuffRemaining(shadow_dance_buff) <= 0.1 Spell(ambush)
	#wait,sec=buff.shadow_dance.remains-0.1,if=(buff.shadow_dance.remains<=1)|energy+energy.regen*buff.shadow_dance.remains<=49
	unless { BuffRemaining(shadow_dance_buff) <= 1 or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) <= 49 } and BuffRemaining(shadow_dance_buff) - 0.1 > 0
	{
		#call_action_list,name=energy_neutral_finishers,if=combo_points=5&buff.shadow_dance.remains>1&buff.shadow_dance.remains<=2
		if ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 SubtletyEnergyNeutralFinishersMainActions()
		#call_action_list,name=finishers,if=(combo_points=5&buff.shadow_dance.remains>1&buff.shadow_dance.remains<=2)&((energy+(energy.regen*buff.shadow_dance.remains))>=50)
		if ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 50 SubtletyFinishersMainActions()
		#ambush,if=debuff.find_weakness.down
		if target.DebuffExpires(find_weakness_debuff) Spell(ambush)
		#fan_of_knives,if=(((combo_points+anticipation_charges)<(10-active_enemies))|(((combo_points+anticipation_charges)=(10-active_enemies))&cooldown.Honor_among_Thieves.remains>1))&(buff.shadow_dance.remains>2)&(dot.rupture.remains<12&dot.rupture.remains>8)&((energy+(energy.regen*buff.shadow_dance.remains))>=72)&active_enemies>=4
		if { ComboPoints() + BuffStacks(anticipation_buff) < 10 - Enemies() or ComboPoints() + BuffStacks(anticipation_buff) == 10 - Enemies() and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 } and BuffRemaining(shadow_dance_buff) > 2 and target.DebuffRemaining(rupture_debuff) < 12 and target.DebuffRemaining(rupture_debuff) > 8 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and Enemies() >= 4 Spell(fan_of_knives)
		#ambush,if=(((combo_points+anticipation_charges)<8)|(((combo_points+anticipation_charges)=8)&cooldown.Honor_among_Thieves.remains>1))&(buff.shadow_dance.remains>2)&(dot.rupture.remains<12&dot.rupture.remains>8)&((energy+(energy.regen*buff.shadow_dance.remains))>=72)&active_enemies=1
		if { ComboPoints() + BuffStacks(anticipation_buff) < 8 or ComboPoints() + BuffStacks(anticipation_buff) == 8 and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 } and BuffRemaining(shadow_dance_buff) > 2 and target.DebuffRemaining(rupture_debuff) < 12 and target.DebuffRemaining(rupture_debuff) > 8 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and Enemies() == 1 Spell(ambush)
		#call_action_list,name=finishers,if=combo_points=5
		if ComboPoints() == 5 SubtletyFinishersMainActions()
		#fan_of_knives,if=((energy+(energy.regen*buff.shadow_dance.remains))>=72)&active_enemies>=5
		if Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and Enemies() >= 5 Spell(fan_of_knives)
		#ambush,if=((energy+(energy.regen*buff.shadow_dance.remains))>=72)
		if Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 Spell(ambush)
	}
}

AddFunction SubtletyDanceRotationAntRefShortCdActions
{
	#vanish
	Spell(vanish)
}

AddFunction SubtletyDanceRotationAntRefShortCdPostConditions
{
	BuffRemaining(shadow_dance_buff) <= 0.1 and Spell(ambush) or not { { BuffRemaining(shadow_dance_buff) <= 1 or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) <= 49 } and BuffRemaining(shadow_dance_buff) - 0.1 > 0 } and { ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and SubtletyEnergyNeutralFinishersShortCdPostConditions() or ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 50 and SubtletyFinishersShortCdPostConditions() or target.DebuffExpires(find_weakness_debuff) and Spell(ambush) or { ComboPoints() + BuffStacks(anticipation_buff) < 10 - Enemies() or ComboPoints() + BuffStacks(anticipation_buff) == 10 - Enemies() and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 } and BuffRemaining(shadow_dance_buff) > 2 and target.DebuffRemaining(rupture_debuff) < 12 and target.DebuffRemaining(rupture_debuff) > 8 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and Enemies() >= 4 and Spell(fan_of_knives) or { ComboPoints() + BuffStacks(anticipation_buff) < 8 or ComboPoints() + BuffStacks(anticipation_buff) == 8 and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 } and BuffRemaining(shadow_dance_buff) > 2 and target.DebuffRemaining(rupture_debuff) < 12 and target.DebuffRemaining(rupture_debuff) > 8 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and Enemies() == 1 and Spell(ambush) or ComboPoints() == 5 and SubtletyFinishersShortCdPostConditions() or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and Enemies() >= 5 and Spell(fan_of_knives) or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and Spell(ambush) }
}

AddFunction SubtletyDanceRotationAntRefCdActions
{
	#potion,name=draenic_agility,if=buff.bloodlust.react|target.time_to_die<40|(buff.shadow_reflection.up|(!talent.shadow_reflection.enabled&buff.shadow_dance.up))&(trinket.stat.agi.up|trinket.stat.multistrike.up|buff.archmages_greater_incandescence_agi.up)|((buff.shadow_reflection.up|(!talent.shadow_reflection.enabled&buff.shadow_dance.up))&target.time_to_die<136)
	if BuffPresent(burst_haste_buff any=1) or target.TimeToDie() < 40 or { BuffPresent(shadow_reflection_buff) or not Talent(shadow_reflection_talent) and BuffPresent(shadow_dance_buff) } and { BuffPresent(trinket_stat_agi_buff) or BuffPresent(trinket_stat_multistrike_buff) or BuffPresent(archmages_greater_incandescence_agi_buff) } or { BuffPresent(shadow_reflection_buff) or not Talent(shadow_reflection_talent) and BuffPresent(shadow_dance_buff) } and target.TimeToDie() < 136 SubtletyUsePotionAgility()
	#shadow_reflection
	Spell(shadow_reflection)
	#use_item,slot=trinket2
	SubtletyUseItemActions()
	#use_item,slot=finger1
	if CheckBoxOn(opt_legendary_ring_agility) Item(legendary_ring_agility usable=1)
	#Arcane_Torrent,if=energy<90
	if Energy() < 90 Spell(arcane_torrent_energy)
}

AddFunction SubtletyDanceRotationAntRefCdPostConditions
{
	BuffRemaining(shadow_dance_buff) <= 0.1 and Spell(ambush) or not { { BuffRemaining(shadow_dance_buff) <= 1 or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) <= 49 } and BuffRemaining(shadow_dance_buff) - 0.1 > 0 } and { ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and SubtletyEnergyNeutralFinishersCdPostConditions() or ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 50 and SubtletyFinishersCdPostConditions() or target.DebuffExpires(find_weakness_debuff) and Spell(ambush) or { ComboPoints() + BuffStacks(anticipation_buff) < 10 - Enemies() or ComboPoints() + BuffStacks(anticipation_buff) == 10 - Enemies() and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 } and BuffRemaining(shadow_dance_buff) > 2 and target.DebuffRemaining(rupture_debuff) < 12 and target.DebuffRemaining(rupture_debuff) > 8 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and Enemies() >= 4 and Spell(fan_of_knives) or { ComboPoints() + BuffStacks(anticipation_buff) < 8 or ComboPoints() + BuffStacks(anticipation_buff) == 8 and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 } and BuffRemaining(shadow_dance_buff) > 2 and target.DebuffRemaining(rupture_debuff) < 12 and target.DebuffRemaining(rupture_debuff) > 8 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and Enemies() == 1 and Spell(ambush) or ComboPoints() == 5 and SubtletyFinishersCdPostConditions() or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and Enemies() >= 5 and Spell(fan_of_knives) or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and Spell(ambush) }
}

### actions.dance_rotation_mfd_ref

AddFunction SubtletyDanceRotationMfdRefMainActions
{
	#premeditation,if=(combo_points=3&cooldown.honor_among_thieves.remains>1&debuff.find_weakness.up)|(combo_points=0)|(combo_points=1&cooldown.honor_among_thieves.remains>1)|(debuff.find_weakness.up&combo_points<=3)
	if { ComboPoints() == 3 and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 and target.DebuffPresent(find_weakness_debuff) or ComboPoints() == 0 or ComboPoints() == 1 and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 or target.DebuffPresent(find_weakness_debuff) and ComboPoints() <= 3 } and ComboPoints() < 5 Spell(premeditation)
	#ambush,if=buff.shadow_dance.remains<=0.1
	if BuffRemaining(shadow_dance_buff) <= 0.1 Spell(ambush)
	#wait,sec=buff.shadow_dance.remains-0.1,if=(buff.shadow_dance.remains<=1)|energy+energy.regen*buff.shadow_dance.remains<=49
	unless { BuffRemaining(shadow_dance_buff) <= 1 or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) <= 49 } and BuffRemaining(shadow_dance_buff) - 0.1 > 0
	{
		#call_action_list,name=energy_neutral_finishers,if=combo_points=5&buff.shadow_dance.remains>1&buff.shadow_dance.remains<=2
		if ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 SubtletyEnergyNeutralFinishersMainActions()
		#call_action_list,name=finishers,if=(combo_points=5&buff.shadow_dance.remains>1&buff.shadow_dance.remains<=2)&((energy+(energy.regen*buff.shadow_dance.remains))>=50)
		if ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 50 SubtletyFinishersMainActions()
		#ambush,if=debuff.find_weakness.down
		if target.DebuffExpires(find_weakness_debuff) Spell(ambush)
		#call_action_list,name=finishers,if=combo_points=5
		if ComboPoints() == 5 SubtletyFinishersMainActions()
		#ambush,if=((energy+(energy.regen*buff.shadow_dance.remains))>=72)&!(combo_points=4&cooldown.honor_among_thieves.remains<1)
		if Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and not { ComboPoints() == 4 and BuffRemaining(honor_among_thieves_cooldown_buff) < 1 } Spell(ambush)
	}
}

AddFunction SubtletyDanceRotationMfdRefShortCdActions
{
	#vanish
	Spell(vanish)

	unless BuffRemaining(shadow_dance_buff) <= 0.1 and Spell(ambush)
	{
		#wait,sec=buff.shadow_dance.remains-0.1,if=(buff.shadow_dance.remains<=1)|energy+energy.regen*buff.shadow_dance.remains<=49
		unless { BuffRemaining(shadow_dance_buff) <= 1 or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) <= 49 } and BuffRemaining(shadow_dance_buff) - 0.1 > 0
		{
			unless ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and SubtletyEnergyNeutralFinishersShortCdPostConditions()
			{
				unless ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 50 and SubtletyFinishersShortCdPostConditions() or target.DebuffExpires(find_weakness_debuff) and Spell(ambush)
				{
					#marked_for_death,if=combo_points=0
					if ComboPoints() == 0 Spell(marked_for_death)
				}
			}
		}
	}
}

AddFunction SubtletyDanceRotationMfdRefShortCdPostConditions
{
	BuffRemaining(shadow_dance_buff) <= 0.1 and Spell(ambush) or not { { BuffRemaining(shadow_dance_buff) <= 1 or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) <= 49 } and BuffRemaining(shadow_dance_buff) - 0.1 > 0 } and { ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and SubtletyEnergyNeutralFinishersShortCdPostConditions() or ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 50 and SubtletyFinishersShortCdPostConditions() or target.DebuffExpires(find_weakness_debuff) and Spell(ambush) or ComboPoints() == 5 and SubtletyFinishersShortCdPostConditions() or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and not { ComboPoints() == 4 and BuffRemaining(honor_among_thieves_cooldown_buff) < 1 } and Spell(ambush) }
}

AddFunction SubtletyDanceRotationMfdRefCdActions
{
	#potion,name=draenic_agility,if=buff.bloodlust.react|target.time_to_die<40|(buff.shadow_reflection.up|(!talent.shadow_reflection.enabled&buff.shadow_dance.up))&(trinket.stat.agi.up|trinket.stat.multistrike.up|buff.archmages_greater_incandescence_agi.up)|((buff.shadow_reflection.up|(!talent.shadow_reflection.enabled&buff.shadow_dance.up))&target.time_to_die<136)
	if BuffPresent(burst_haste_buff any=1) or target.TimeToDie() < 40 or { BuffPresent(shadow_reflection_buff) or not Talent(shadow_reflection_talent) and BuffPresent(shadow_dance_buff) } and { BuffPresent(trinket_stat_agi_buff) or BuffPresent(trinket_stat_multistrike_buff) or BuffPresent(archmages_greater_incandescence_agi_buff) } or { BuffPresent(shadow_reflection_buff) or not Talent(shadow_reflection_talent) and BuffPresent(shadow_dance_buff) } and target.TimeToDie() < 136 SubtletyUsePotionAgility()
	#shadow_reflection
	Spell(shadow_reflection)
	#use_item,slot=trinket2
	SubtletyUseItemActions()
	#use_item,slot=finger1
	if CheckBoxOn(opt_legendary_ring_agility) Item(legendary_ring_agility usable=1)
	#Arcane_Torrent,if=energy<90
	if Energy() < 90 Spell(arcane_torrent_energy)
}

AddFunction SubtletyDanceRotationMfdRefCdPostConditions
{
	BuffRemaining(shadow_dance_buff) <= 0.1 and Spell(ambush) or not { { BuffRemaining(shadow_dance_buff) <= 1 or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) <= 49 } and BuffRemaining(shadow_dance_buff) - 0.1 > 0 } and { ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and SubtletyEnergyNeutralFinishersCdPostConditions() or ComboPoints() == 5 and BuffRemaining(shadow_dance_buff) > 1 and BuffRemaining(shadow_dance_buff) <= 2 and Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 50 and SubtletyFinishersCdPostConditions() or target.DebuffExpires(find_weakness_debuff) and Spell(ambush) or ComboPoints() == 5 and SubtletyFinishersCdPostConditions() or Energy() + EnergyRegenRate() * BuffRemaining(shadow_dance_buff) >= 72 and not { ComboPoints() == 4 and BuffRemaining(honor_among_thieves_cooldown_buff) < 1 } and Spell(ambush) }
}

### actions.energy_neutral_finishers

AddFunction SubtletyEnergyNeutralFinishersMainActions
{
	#rupture,cycle_targets=1,if=remains<8
	if target.DebuffRemaining(rupture_debuff) < 8 Spell(rupture)
	#slice_and_dice,if=buff.slice_and_dice.remains<12&(buff.shadow_reflection.remains<8|!talent.shadow_reflection.enabled)
	if BuffRemaining(slice_and_dice_buff) < 12 and { BuffRemaining(shadow_reflection_buff) < 8 or not Talent(shadow_reflection_talent) } Spell(slice_and_dice)
	#slice_and_dice,if=buff.slice_and_dice.remains<2
	if BuffRemaining(slice_and_dice_buff) < 2 Spell(slice_and_dice)
}

AddFunction SubtletyEnergyNeutralFinishersShortCdPostConditions
{
	target.DebuffRemaining(rupture_debuff) < 8 and Spell(rupture) or BuffRemaining(slice_and_dice_buff) < 12 and { BuffRemaining(shadow_reflection_buff) < 8 or not Talent(shadow_reflection_talent) } and Spell(slice_and_dice) or BuffRemaining(slice_and_dice_buff) < 2 and Spell(slice_and_dice)
}

AddFunction SubtletyEnergyNeutralFinishersCdPostConditions
{
	target.DebuffRemaining(rupture_debuff) < 8 and Spell(rupture) or BuffRemaining(slice_and_dice_buff) < 12 and { BuffRemaining(shadow_reflection_buff) < 8 or not Talent(shadow_reflection_talent) } and Spell(slice_and_dice) or BuffRemaining(slice_and_dice_buff) < 2 and Spell(slice_and_dice)
}

### actions.finishers

AddFunction SubtletyFinishersMainActions
{
	#rupture,cycle_targets=1,if=remains<8
	if target.DebuffRemaining(rupture_debuff) < 8 Spell(rupture)
	#rupture,cycle_targets=1,if=(buff.shadow_reflection.remains>8&dot.rupture.remains<12)
	if BuffRemaining(shadow_reflection_buff) > 8 and target.DebuffRemaining(rupture_debuff) < 12 Spell(rupture)
	#death_from_above,if=dot.rupture.remains>20&buff.slice_and_dice.remains>5&debuff.find_weakness.up
	if target.DebuffRemaining(rupture_debuff) > 20 and BuffRemaining(slice_and_dice_buff) > 5 and target.DebuffPresent(find_weakness_debuff) Spell(death_from_above)
	#eviscerate,if=dot.rupture.remains>20&buff.slice_and_dice.remains>5&(!cooldown.death_from_above.up|!talent.death_from_above.enabled)
	if target.DebuffRemaining(rupture_debuff) > 20 and BuffRemaining(slice_and_dice_buff) > 5 and { not { not SpellCooldown(death_from_above) > 0 } or not Talent(death_from_above_talent) } Spell(eviscerate)
	#slice_and_dice,if=buff.slice_and_dice.remains<12&(buff.shadow_reflection.remains<8|!talent.shadow_reflection.enabled)
	if BuffRemaining(slice_and_dice_buff) < 12 and { BuffRemaining(shadow_reflection_buff) < 8 or not Talent(shadow_reflection_talent) } Spell(slice_and_dice)
	#slice_and_dice,if=buff.slice_and_dice.remains<2
	if BuffRemaining(slice_and_dice_buff) < 2 Spell(slice_and_dice)
	#crimson_tempest,if=(active_enemies>=3&debuff.find_weakness.down)|active_enemies>=4&(cooldown.death_from_above.remains>0|!talent.death_from_above.enabled)
	if Enemies() >= 3 and target.DebuffExpires(find_weakness_debuff) or Enemies() >= 4 and { SpellCooldown(death_from_above) > 0 or not Talent(death_from_above_talent) } Spell(crimson_tempest)
	#death_from_above,if=talent.death_from_above.enabled
	if Talent(death_from_above_talent) Spell(death_from_above)
	#eviscerate,if=(!cooldown.death_from_above.up|!talent.death_from_above.enabled)
	if not { not SpellCooldown(death_from_above) > 0 } or not Talent(death_from_above_talent) Spell(eviscerate)
}

AddFunction SubtletyFinishersShortCdPostConditions
{
	target.DebuffRemaining(rupture_debuff) < 8 and Spell(rupture) or BuffRemaining(shadow_reflection_buff) > 8 and target.DebuffRemaining(rupture_debuff) < 12 and Spell(rupture) or target.DebuffRemaining(rupture_debuff) > 20 and BuffRemaining(slice_and_dice_buff) > 5 and target.DebuffPresent(find_weakness_debuff) and Spell(death_from_above) or target.DebuffRemaining(rupture_debuff) > 20 and BuffRemaining(slice_and_dice_buff) > 5 and { not { not SpellCooldown(death_from_above) > 0 } or not Talent(death_from_above_talent) } and Spell(eviscerate) or BuffRemaining(slice_and_dice_buff) < 12 and { BuffRemaining(shadow_reflection_buff) < 8 or not Talent(shadow_reflection_talent) } and Spell(slice_and_dice) or BuffRemaining(slice_and_dice_buff) < 2 and Spell(slice_and_dice) or { Enemies() >= 3 and target.DebuffExpires(find_weakness_debuff) or Enemies() >= 4 and { SpellCooldown(death_from_above) > 0 or not Talent(death_from_above_talent) } } and Spell(crimson_tempest) or Talent(death_from_above_talent) and Spell(death_from_above) or { not { not SpellCooldown(death_from_above) > 0 } or not Talent(death_from_above_talent) } and Spell(eviscerate)
}

AddFunction SubtletyFinishersCdPostConditions
{
	target.DebuffRemaining(rupture_debuff) < 8 and Spell(rupture) or BuffRemaining(shadow_reflection_buff) > 8 and target.DebuffRemaining(rupture_debuff) < 12 and Spell(rupture) or target.DebuffRemaining(rupture_debuff) > 20 and BuffRemaining(slice_and_dice_buff) > 5 and target.DebuffPresent(find_weakness_debuff) and Spell(death_from_above) or target.DebuffRemaining(rupture_debuff) > 20 and BuffRemaining(slice_and_dice_buff) > 5 and { not { not SpellCooldown(death_from_above) > 0 } or not Talent(death_from_above_talent) } and Spell(eviscerate) or BuffRemaining(slice_and_dice_buff) < 12 and { BuffRemaining(shadow_reflection_buff) < 8 or not Talent(shadow_reflection_talent) } and Spell(slice_and_dice) or BuffRemaining(slice_and_dice_buff) < 2 and Spell(slice_and_dice) or { Enemies() >= 3 and target.DebuffExpires(find_weakness_debuff) or Enemies() >= 4 and { SpellCooldown(death_from_above) > 0 or not Talent(death_from_above_talent) } } and Spell(crimson_tempest) or Talent(death_from_above_talent) and Spell(death_from_above) or { not { not SpellCooldown(death_from_above) > 0 } or not Talent(death_from_above_talent) } and Spell(eviscerate)
}

### actions.generators_ant

AddFunction SubtletyGeneratorsAntMainActions
{
	#call_action_list,name=finishers,if=combo_points=5&combo_points+anticipation_charges>=9
	if ComboPoints() == 5 and ComboPoints() + BuffStacks(anticipation_buff) >= 9 SubtletyFinishersMainActions()
	#call_action_list,name=energy_neutral_finishers,if=combo_points=5
	if ComboPoints() == 5 SubtletyEnergyNeutralFinishersMainActions()
	#fan_of_knives,if=active_enemies>2
	if Enemies() > 2 Spell(fan_of_knives)
	#backstab,if=energy>105
	if Energy() > 105 Spell(backstab)
}

### actions.generators_fw_ant

AddFunction SubtletyGeneratorsFwAntMainActions
{
	#backstab,if=((combo_points+anticipation_charges)<8)&(dot.rupture.remains<12&dot.rupture.remains>8)&active_enemies=1
	if ComboPoints() + BuffStacks(anticipation_buff) < 8 and target.DebuffRemaining(rupture_debuff) < 12 and target.DebuffRemaining(rupture_debuff) > 8 and Enemies() == 1 Spell(backstab)
	#backstab,if=((combo_points+anticipation_charges)<9)&(dot.rupture.remains<10&dot.rupture.remains>8)&active_enemies=1
	if ComboPoints() + BuffStacks(anticipation_buff) < 9 and target.DebuffRemaining(rupture_debuff) < 10 and target.DebuffRemaining(rupture_debuff) > 8 and Enemies() == 1 Spell(backstab)
	#call_action_list,name=finishers,if=combo_points=5
	if ComboPoints() == 5 SubtletyFinishersMainActions()
	#fan_of_knives,if=active_enemies>2
	if Enemies() > 2 Spell(fan_of_knives)
	#backstab
	Spell(backstab)
}

AddFunction SubtletyGeneratorsFwAntShortCdPostConditions
{
	ComboPoints() + BuffStacks(anticipation_buff) < 8 and target.DebuffRemaining(rupture_debuff) < 12 and target.DebuffRemaining(rupture_debuff) > 8 and Enemies() == 1 and Spell(backstab) or ComboPoints() + BuffStacks(anticipation_buff) < 9 and target.DebuffRemaining(rupture_debuff) < 10 and target.DebuffRemaining(rupture_debuff) > 8 and Enemies() == 1 and Spell(backstab) or ComboPoints() == 5 and SubtletyFinishersShortCdPostConditions() or Enemies() > 2 and Spell(fan_of_knives) or Spell(backstab)
}

### actions.generators_fw_mfd

AddFunction SubtletyGeneratorsFwMfdMainActions
{
	#call_action_list,name=finishers,if=combo_points=5
	if ComboPoints() == 5 SubtletyFinishersMainActions()
	#backstab,if=!(combo_points=4&(cooldown.honor_among_thieves.remains<1))
	if not { ComboPoints() == 4 and BuffRemaining(honor_among_thieves_cooldown_buff) < 1 } Spell(backstab)
}

AddFunction SubtletyGeneratorsFwMfdShortCdActions
{
	unless ComboPoints() == 5 and SubtletyFinishersShortCdPostConditions()
	{
		#marked_for_death,if=combo_points=0
		if ComboPoints() == 0 Spell(marked_for_death)
	}
}

### actions.generators_mfd

AddFunction SubtletyGeneratorsMfdMainActions
{
	#call_action_list,name=finishers,if=combo_points=5
	if ComboPoints() == 5 SubtletyFinishersMainActions()
	#backstab,if=energy>105&!(combo_points=4&cooldown.honor_among_thieves.remains<1)
	if Energy() > 105 and not { ComboPoints() == 4 and BuffRemaining(honor_among_thieves_cooldown_buff) < 1 } Spell(backstab)
}

### actions.opener_ant

AddFunction SubtletyOpenerAntMainActions
{
	#rupture,if=time<1
	if TimeInCombat() < 1 Spell(rupture)
}

AddFunction SubtletyOpenerAntShortCdActions
{
	#Vanish,if=time<1
	if TimeInCombat() < 1 Spell(vanish)

	unless TimeInCombat() < 1 and Spell(rupture)
	{
		#shadow_dance
		Spell(shadow_dance)
	}
}

AddFunction SubtletyOpenerAntShortCdPostConditions
{
	TimeInCombat() < 1 and Spell(rupture)
}

AddFunction SubtletyOpenerAntCdActions
{
	#shadow_reflection,if=time<1
	if TimeInCombat() < 1 Spell(shadow_reflection)
}

AddFunction SubtletyOpenerAntCdPostConditions
{
	TimeInCombat() < 1 and Spell(rupture)
}

### actions.opener_mfd

AddFunction SubtletyOpenerMfdMainActions
{
	#premeditation,if=time<1
	if TimeInCombat() < 1 and ComboPoints() < 5 Spell(premeditation)
	#ambush,if=time<1
	if TimeInCombat() < 1 Spell(ambush)
	#rupture,if=time<2
	if TimeInCombat() < 2 Spell(rupture)
	#ambush,if=time<3
	if TimeInCombat() < 3 Spell(ambush)
}

AddFunction SubtletyOpenerMfdShortCdPostConditions
{
	TimeInCombat() < 1 and Spell(ambush) or TimeInCombat() < 2 and Spell(rupture) or TimeInCombat() < 3 and Spell(ambush)
}

AddFunction SubtletyOpenerMfdCdPostConditions
{
	TimeInCombat() < 1 and Spell(ambush) or TimeInCombat() < 2 and Spell(rupture) or TimeInCombat() < 3 and Spell(ambush)
}

### actions.pool_ant

AddFunction SubtletyPoolAntMainActions
{
	#call_action_list,name=finishers,if=combo_points+anticipation_charges>=9&combo_points=5
	if ComboPoints() + BuffStacks(anticipation_buff) >= 9 and ComboPoints() == 5 SubtletyFinishersMainActions()
}

AddFunction SubtletyPoolAntShortCdPostConditions
{
	ComboPoints() + BuffStacks(anticipation_buff) >= 9 and ComboPoints() == 5 and SubtletyFinishersShortCdPostConditions()
}

AddFunction SubtletyPoolAntCdActions
{
	unless ComboPoints() + BuffStacks(anticipation_buff) >= 9 and ComboPoints() == 5 and SubtletyFinishersCdPostConditions()
	{
		#preparation,if=cooldown.vanish.remains>60|target.time_to_die<17&cooldown.shadow_dance.remains>1
		if SpellCooldown(vanish) > 60 or target.TimeToDie() < 17 and SpellCooldown(shadow_dance) > 1 Spell(preparation)
	}
}

AddFunction SubtletyPoolAntCdPostConditions
{
	ComboPoints() + BuffStacks(anticipation_buff) >= 9 and ComboPoints() == 5 and SubtletyFinishersCdPostConditions()
}

### actions.pool_mfd

AddFunction SubtletyPoolMfdMainActions
{
	#call_action_list,name=finishers,if=combo_points=5
	if ComboPoints() == 5 SubtletyFinishersMainActions()
}

AddFunction SubtletyPoolMfdShortCdPostConditions
{
	ComboPoints() == 5 and SubtletyFinishersShortCdPostConditions()
}

AddFunction SubtletyPoolMfdCdActions
{
	unless ComboPoints() == 5 and SubtletyFinishersCdPostConditions()
	{
		#preparation,if=cooldown.vanish.remains>60|target.time_to_die<17&cooldown.shadow_dance.remains>1
		if SpellCooldown(vanish) > 60 or target.TimeToDie() < 17 and SpellCooldown(shadow_dance) > 1 Spell(preparation)
	}
}

AddFunction SubtletyPoolMfdCdPostConditions
{
	ComboPoints() == 5 and SubtletyFinishersCdPostConditions()
}

### actions.precombat

AddFunction SubtletyPrecombatMainActions
{
	#flask,type=greater_draenic_agility_flask
	#food,type=salty_squid_roll
	#apply_poison,lethal=deadly
	if BuffRemaining(lethal_poison_buff) < 1200 Spell(deadly_poison)
	#stealth
	Spell(stealth)
	#premeditation,if=!talent.marked_for_death.enabled
	if not Talent(marked_for_death_talent) and ComboPoints() < 5 Spell(premeditation)
	#slice_and_dice
	Spell(slice_and_dice)
	#premeditation
	if ComboPoints() < 5 Spell(premeditation)
}

AddFunction SubtletyPrecombatShortCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth)
	{
		#marked_for_death
		Spell(marked_for_death)
	}
}

AddFunction SubtletyPrecombatShortCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth) or Spell(slice_and_dice)
}

AddFunction SubtletyPrecombatCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison)
	{
		#snapshot_stats
		#potion,name=draenic_agility
		SubtletyUsePotionAgility()
	}
}

AddFunction SubtletyPrecombatCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth) or Spell(slice_and_dice)
}

### actions.shadowmeld_rotation

AddFunction SubtletyShadowmeldRotationMainActions
{
	#Premeditation
	if ComboPoints() < 5 Spell(premeditation)
	#Ambush
	Spell(ambush)
}

AddFunction SubtletyShadowmeldRotationShortCdPostConditions
{
	Spell(ambush)
}

AddFunction SubtletyShadowmeldRotationCdPostConditions
{
	Spell(ambush)
}

### actions.vanish_rotation_ant_ref

AddFunction SubtletyVanishRotationAntRefMainActions
{
	#premeditation,if=(combo_points=3&anticipation_charges=3&cooldown.honor_among_thieves.remains>1)|(combo_points<=3&anticipation_charges+combo_points<=5)
	if { ComboPoints() == 3 and BuffStacks(anticipation_buff) == 3 and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 or ComboPoints() <= 3 and BuffStacks(anticipation_buff) + ComboPoints() <= 5 } and ComboPoints() < 5 Spell(premeditation)
	#premeditation,if=combo_points<=4&buff.vanish.down&buff.subterfuge.remains<1
	if ComboPoints() <= 4 and BuffExpires(vanish_buff) and BuffRemaining(subterfuge_buff) < 1 and ComboPoints() < 5 Spell(premeditation)
	#ambush,if=buff.subterfuge.remains<=0.1&buff.vanish.down
	if BuffRemaining(subterfuge_buff) <= 0.1 and BuffExpires(vanish_buff) Spell(ambush)
	#wait,sec=buff.subterfuge.remains-0.1,if=(buff.subterfuge.remains<=1&buff.vanish.down)|(energy+energy.regen*buff.subterfuge.remains<=69&buff.vanish.down)
	unless { BuffRemaining(subterfuge_buff) <= 1 and BuffExpires(vanish_buff) or Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) <= 69 and BuffExpires(vanish_buff) } and BuffRemaining(subterfuge_buff) - 0.1 > 0
	{
		#call_action_list,name=energy_neutral_finishers,if=combo_points=5&buff.subterfuge.remains>1&buff.subterfuge.remains<=2&(buff.vanish.remains<2|buff.vanish.down)
		if ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } SubtletyEnergyNeutralFinishersMainActions()
		#call_action_list,name=finishers,if=(combo_points=5&buff.subterfuge.remains>1&buff.subterfuge.remains<=2)&(buff.vanish.remains<2|buff.vanish.down)&((energy+energy.regen*buff.subterfuge.remains)>=70)
		if ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) >= 70 SubtletyFinishersMainActions()
		#ambush,if=debuff.find_weakness.down
		if target.DebuffExpires(find_weakness_debuff) Spell(ambush)
		#call_action_list,name=finishers,if=combo_points=5
		if ComboPoints() == 5 SubtletyFinishersMainActions()
		#ambush,if=((energy+(energy.regen*(buff.vanish.remains+1)))>=112)
		if Energy() + EnergyRegenRate() * { BuffRemaining(vanish_buff) + 1 } >= 112 Spell(ambush)
	}
}

AddFunction SubtletyVanishRotationAntRefShortCdPostConditions
{
	BuffRemaining(subterfuge_buff) <= 0.1 and BuffExpires(vanish_buff) and Spell(ambush) or not { { BuffRemaining(subterfuge_buff) <= 1 and BuffExpires(vanish_buff) or Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) <= 69 and BuffExpires(vanish_buff) } and BuffRemaining(subterfuge_buff) - 0.1 > 0 } and { ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and SubtletyEnergyNeutralFinishersShortCdPostConditions() or ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) >= 70 and SubtletyFinishersShortCdPostConditions() or target.DebuffExpires(find_weakness_debuff) and Spell(ambush) or ComboPoints() == 5 and SubtletyFinishersShortCdPostConditions() or Energy() + EnergyRegenRate() * { BuffRemaining(vanish_buff) + 1 } >= 112 and Spell(ambush) }
}

AddFunction SubtletyVanishRotationAntRefCdPostConditions
{
	BuffRemaining(subterfuge_buff) <= 0.1 and BuffExpires(vanish_buff) and Spell(ambush) or not { { BuffRemaining(subterfuge_buff) <= 1 and BuffExpires(vanish_buff) or Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) <= 69 and BuffExpires(vanish_buff) } and BuffRemaining(subterfuge_buff) - 0.1 > 0 } and { ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and SubtletyEnergyNeutralFinishersCdPostConditions() or ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) >= 70 and SubtletyFinishersCdPostConditions() or target.DebuffExpires(find_weakness_debuff) and Spell(ambush) or ComboPoints() == 5 and SubtletyFinishersCdPostConditions() or Energy() + EnergyRegenRate() * { BuffRemaining(vanish_buff) + 1 } >= 112 and Spell(ambush) }
}

### actions.vanish_rotation_mfd_ref

AddFunction SubtletyVanishRotationMfdRefMainActions
{
	#premeditation,if=(combo_points=3&cooldown.honor_among_thieves.remains>1&debuff.find_weakness.up)|(combo_points=0)|(combo_points=1&cooldown.honor_among_thieves.remains>1)|(debuff.find_weakness.up&combo_points<=3)
	if { ComboPoints() == 3 and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 and target.DebuffPresent(find_weakness_debuff) or ComboPoints() == 0 or ComboPoints() == 1 and BuffRemaining(honor_among_thieves_cooldown_buff) > 1 or target.DebuffPresent(find_weakness_debuff) and ComboPoints() <= 3 } and ComboPoints() < 5 Spell(premeditation)
	#premeditation,if=combo_points<=4&buff.vanish.down&buff.subterfuge.remains<1
	if ComboPoints() <= 4 and BuffExpires(vanish_buff) and BuffRemaining(subterfuge_buff) < 1 and ComboPoints() < 5 Spell(premeditation)
	#ambush,if=buff.subterfuge.remains<=0.1&buff.vanish.down
	if BuffRemaining(subterfuge_buff) <= 0.1 and BuffExpires(vanish_buff) Spell(ambush)
	#wait,sec=buff.subterfuge.remains-0.1,if=(buff.subterfuge.remains<=1&buff.vanish.down)|(energy+energy.regen*buff.subterfuge.remains<=69&buff.vanish.down)
	unless { BuffRemaining(subterfuge_buff) <= 1 and BuffExpires(vanish_buff) or Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) <= 69 and BuffExpires(vanish_buff) } and BuffRemaining(subterfuge_buff) - 0.1 > 0
	{
		#call_action_list,name=energy_neutral_finishers,if=combo_points=5&buff.subterfuge.remains>1&buff.subterfuge.remains<=2&(buff.vanish.remains<2|buff.vanish.down)
		if ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } SubtletyEnergyNeutralFinishersMainActions()
		#call_action_list,name=finishers,if=(combo_points=5&buff.subterfuge.remains>1&buff.subterfuge.remains<=2)&(buff.vanish.remains<2|buff.vanish.down)&((energy+energy.regen*buff.subterfuge.remains)>=70)
		if ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) >= 70 SubtletyFinishersMainActions()
		#ambush,if=debuff.find_weakness.down
		if target.DebuffExpires(find_weakness_debuff) Spell(ambush)
		#call_action_list,name=finishers,if=combo_points=5
		if ComboPoints() == 5 SubtletyFinishersMainActions()
		#ambush,if=((energy+(energy.regen*(buff.vanish.remains+1)))>=112)&!(combo_points=4&buff.vanish.remains>3)
		if Energy() + EnergyRegenRate() * { BuffRemaining(vanish_buff) + 1 } >= 112 and not { ComboPoints() == 4 and BuffRemaining(vanish_buff) > 3 } Spell(ambush)
	}
}

AddFunction SubtletyVanishRotationMfdRefShortCdPostConditions
{
	BuffRemaining(subterfuge_buff) <= 0.1 and BuffExpires(vanish_buff) and Spell(ambush) or not { { BuffRemaining(subterfuge_buff) <= 1 and BuffExpires(vanish_buff) or Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) <= 69 and BuffExpires(vanish_buff) } and BuffRemaining(subterfuge_buff) - 0.1 > 0 } and { ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and SubtletyEnergyNeutralFinishersShortCdPostConditions() or ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) >= 70 and SubtletyFinishersShortCdPostConditions() or target.DebuffExpires(find_weakness_debuff) and Spell(ambush) or ComboPoints() == 5 and SubtletyFinishersShortCdPostConditions() or Energy() + EnergyRegenRate() * { BuffRemaining(vanish_buff) + 1 } >= 112 and not { ComboPoints() == 4 and BuffRemaining(vanish_buff) > 3 } and Spell(ambush) }
}

AddFunction SubtletyVanishRotationMfdRefCdActions
{
	unless BuffRemaining(subterfuge_buff) <= 0.1 and BuffExpires(vanish_buff) and Spell(ambush)
	{
		#wait,sec=buff.subterfuge.remains-0.1,if=(buff.subterfuge.remains<=1&buff.vanish.down)|(energy+energy.regen*buff.subterfuge.remains<=69&buff.vanish.down)
		unless { BuffRemaining(subterfuge_buff) <= 1 and BuffExpires(vanish_buff) or Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) <= 69 and BuffExpires(vanish_buff) } and BuffRemaining(subterfuge_buff) - 0.1 > 0
		{
			unless ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and SubtletyEnergyNeutralFinishersCdPostConditions()
			{
				unless ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) >= 70 and SubtletyFinishersCdPostConditions() or target.DebuffExpires(find_weakness_debuff) and Spell(ambush)
				{
					unless ComboPoints() == 5 and SubtletyFinishersCdPostConditions() or Energy() + EnergyRegenRate() * { BuffRemaining(vanish_buff) + 1 } >= 112 and not { ComboPoints() == 4 and BuffRemaining(vanish_buff) > 3 } and Spell(ambush)
					{
						#preparation,if=cooldown.vanish.remains>60|target.time_to_die<17
						if SpellCooldown(vanish) > 60 or target.TimeToDie() < 17 Spell(preparation)
					}
				}
			}
		}
	}
}

AddFunction SubtletyVanishRotationMfdRefCdPostConditions
{
	BuffRemaining(subterfuge_buff) <= 0.1 and BuffExpires(vanish_buff) and Spell(ambush) or not { { BuffRemaining(subterfuge_buff) <= 1 and BuffExpires(vanish_buff) or Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) <= 69 and BuffExpires(vanish_buff) } and BuffRemaining(subterfuge_buff) - 0.1 > 0 } and { ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and SubtletyEnergyNeutralFinishersCdPostConditions() or ComboPoints() == 5 and BuffRemaining(subterfuge_buff) > 1 and BuffRemaining(subterfuge_buff) <= 2 and { BuffRemaining(vanish_buff) < 2 or BuffExpires(vanish_buff) } and Energy() + EnergyRegenRate() * BuffRemaining(subterfuge_buff) >= 70 and SubtletyFinishersCdPostConditions() or target.DebuffExpires(find_weakness_debuff) and Spell(ambush) or ComboPoints() == 5 and SubtletyFinishersCdPostConditions() or Energy() + EnergyRegenRate() * { BuffRemaining(vanish_buff) + 1 } >= 112 and not { ComboPoints() == 4 and BuffRemaining(vanish_buff) > 3 } and Spell(ambush) }
}

### Subtlety icons.

AddCheckBox(opt_rogue_subtlety_aoe L(AOE) default specialization=subtlety)

AddIcon checkbox=!opt_rogue_subtlety_aoe enemies=1 help=shortcd specialization=subtlety
{
	if not InCombat() SubtletyPrecombatShortCdActions()
	unless not InCombat() and SubtletyPrecombatShortCdPostConditions()
	{
		SubtletyDefaultShortCdActions()
	}
}

AddIcon checkbox=opt_rogue_subtlety_aoe help=shortcd specialization=subtlety
{
	if not InCombat() SubtletyPrecombatShortCdActions()
	unless not InCombat() and SubtletyPrecombatShortCdPostConditions()
	{
		SubtletyDefaultShortCdActions()
	}
}

AddIcon enemies=1 help=main specialization=subtlety
{
	if not InCombat() SubtletyPrecombatMainActions()
	SubtletyDefaultMainActions()
}

AddIcon checkbox=opt_rogue_subtlety_aoe help=aoe specialization=subtlety
{
	if not InCombat() SubtletyPrecombatMainActions()
	SubtletyDefaultMainActions()
}

AddIcon checkbox=!opt_rogue_subtlety_aoe enemies=1 help=cd specialization=subtlety
{
	if not InCombat() SubtletyPrecombatCdActions()
	unless not InCombat() and SubtletyPrecombatCdPostConditions()
	{
		SubtletyDefaultCdActions()
	}
}

AddIcon checkbox=opt_rogue_subtlety_aoe help=cd specialization=subtlety
{
	if not InCombat() SubtletyPrecombatCdActions()
	unless not InCombat() and SubtletyPrecombatCdPostConditions()
	{
		SubtletyDefaultCdActions()
	}
}

### Required symbols
# ambush
# anticipation_buff
# anticipation_talent
# arcane_torrent_energy
# archmages_greater_incandescence_agi_buff
# backstab
# crimson_tempest
# deadly_poison
# death_from_above
# death_from_above_talent
# draenic_agility_potion
# eviscerate
# fan_of_knives
# find_weakness_debuff
# honor_among_thieves_cooldown_buff
# kick
# legendary_ring_agility
# lethal_poison_buff
# marked_for_death
# marked_for_death_talent
# premeditation
# preparation
# rupture
# rupture_debuff
# shadow_dance
# shadow_dance_buff
# shadow_reflection
# shadow_reflection_buff
# shadow_reflection_talent
# shadowmeld
# shadowmeld_buff
# shadowstep
# slice_and_dice
# slice_and_dice_buff
# stealth
# subterfuge_buff
# vanish
# vanish_buff
]]
	OvaleScripts:RegisterScript("ROGUE", "subtlety", name, desc, code, "script")
end

do
	local name = "simulationcraft_rogue_assassination_t18m"
	local desc = "[6.2] SimulationCraft: Rogue_Assassination_T18M"
	local code = [[
# Based on SimulationCraft profile "Rogue_Assassination_T18M".
#	class=rogue
#	spec=assassination
#	talents=3000032
#	glyphs=vendetta/energy/disappearance

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_rogue_spells)

AddCheckBox(opt_interrupt L(interrupt) default specialization=assassination)
AddCheckBox(opt_melee_range L(not_in_melee_range) specialization=assassination)
AddCheckBox(opt_potion_agility ItemName(draenic_agility_potion) default specialization=assassination)
AddCheckBox(opt_legendary_ring_agility ItemName(legendary_ring_agility) default specialization=assassination)
AddCheckBox(opt_vanish SpellName(vanish) default specialization=assassination)

AddFunction AssassinationUsePotionAgility
{
	if CheckBoxOn(opt_potion_agility) and target.Classification(worldboss) Item(draenic_agility_potion usable=1)
}

AddFunction AssassinationUseItemActions
{
	Item(Trinket0Slot usable=1)
	Item(Trinket1Slot usable=1)
}

AddFunction AssassinationGetInMeleeRange
{
	if CheckBoxOn(opt_melee_range) and not target.InRange(kick)
	{
		Spell(shadowstep)
		Texture(misc_arrowlup help=L(not_in_melee_range))
	}
}

AddFunction AssassinationInterruptActions
{
	if CheckBoxOn(opt_interrupt) and not target.IsFriend() and target.IsInterruptible()
	{
		if target.InRange(kick) Spell(kick)
		if not target.Classification(worldboss)
		{
			if target.InRange(cheap_shot) Spell(cheap_shot)
			if target.InRange(deadly_throw) and ComboPoints() == 5 Spell(deadly_throw)
			if target.InRange(kidney_shot) Spell(kidney_shot)
			Spell(arcane_torrent_energy)
			if target.InRange(quaking_palm) Spell(quaking_palm)
		}
	}
}

### actions.default

AddFunction AssassinationDefaultMainActions
{
	#mutilate,if=buff.stealth.up|buff.vanish.up
	if BuffPresent(stealthed_buff any=1) or BuffPresent(vanish_buff) Spell(mutilate)
	#rupture,if=((combo_points>=4&!talent.anticipation.enabled)|combo_points=5)&ticks_remain<3
	if { ComboPoints() >= 4 and not Talent(anticipation_talent) or ComboPoints() == 5 } and target.TicksRemaining(rupture_debuff) < 3 Spell(rupture)
	#rupture,cycle_targets=1,if=spell_targets.fan_of_knives>1&!ticking&combo_points=5
	if Enemies() > 1 and not target.DebuffPresent(rupture_debuff) and ComboPoints() == 5 Spell(rupture)
	#rupture,cycle_targets=1,if=combo_points=5&remains<=duration*0.3&spell_targets.fan_of_knives>1
	if ComboPoints() == 5 and target.DebuffRemaining(rupture_debuff) <= BaseDuration(rupture_debuff) * 0.3 and Enemies() > 1 Spell(rupture)
	#call_action_list,name=finishers,if=combo_points=5&((!cooldown.death_from_above.remains&talent.death_from_above.enabled)|buff.envenom.down|!talent.anticipation.enabled|anticipation_charges+combo_points>=6)
	if ComboPoints() == 5 and { not SpellCooldown(death_from_above) > 0 and Talent(death_from_above_talent) or BuffExpires(envenom_buff) or not Talent(anticipation_talent) or BuffStacks(anticipation_buff) + ComboPoints() >= 6 } AssassinationFinishersMainActions()
	#call_action_list,name=finishers,if=dot.rupture.remains<2
	if target.DebuffRemaining(rupture_debuff) < 2 AssassinationFinishersMainActions()
	#call_action_list,name=generators
	AssassinationGeneratorsMainActions()
}

AddFunction AssassinationDefaultShortCdActions
{
	#vanish,if=time>10&energy>13&!buff.stealth.up&buff.blindside.down&energy.time_to_max>gcd*2&((combo_points+anticipation_charges<8)|(!talent.anticipation.enabled&combo_points<=1))
	if TimeInCombat() > 10 and Energy() > 13 and not BuffPresent(stealthed_buff any=1) and BuffExpires(blindside_buff) and TimeToMaxEnergy() > GCD() * 2 and { ComboPoints() + BuffStacks(anticipation_buff) < 8 or not Talent(anticipation_talent) and ComboPoints() <= 1 } and { CheckBoxOn(opt_vanish) or not SpellCooldown(preparation) > 0 } Spell(vanish)

	unless { BuffPresent(stealthed_buff any=1) or BuffPresent(vanish_buff) } and Spell(mutilate)
	{
		#auto_attack
		AssassinationGetInMeleeRange()

		unless { ComboPoints() >= 4 and not Talent(anticipation_talent) or ComboPoints() == 5 } and target.TicksRemaining(rupture_debuff) < 3 and Spell(rupture) or Enemies() > 1 and not target.DebuffPresent(rupture_debuff) and ComboPoints() == 5 and Spell(rupture)
		{
			#marked_for_death,if=combo_points=0
			if ComboPoints() == 0 Spell(marked_for_death)
		}
	}
}

AddFunction AssassinationDefaultCdActions
{
	#potion,name=draenic_agility,if=buff.bloodlust.react|target.time_to_die<40|debuff.vendetta.up
	if BuffPresent(burst_haste_buff any=1) or target.TimeToDie() < 40 or target.DebuffPresent(vendetta_debuff) AssassinationUsePotionAgility()
	#kick,if=target.debuff.casting.react
	if target.IsInterruptible() AssassinationInterruptActions()
	#preparation,if=!buff.vanish.up&cooldown.vanish.remains>60&time>10
	if not BuffPresent(vanish_buff) and SpellCooldown(vanish) > 60 and TimeInCombat() > 10 Spell(preparation)
	#use_item,slot=finger1,if=spell_targets.fan_of_knives>1|(debuff.vendetta.up&spell_targets.fan_of_knives=1)
	if { Enemies() > 1 or target.DebuffPresent(vendetta_debuff) and Enemies() == 1 } and CheckBoxOn(opt_legendary_ring_agility) Item(legendary_ring_agility usable=1)
	#use_item,slot=trinket1,if=spell_targets.fan_of_knives>1|(debuff.vendetta.up&spell_targets.fan_of_knives=1)
	if Enemies() > 1 or target.DebuffPresent(vendetta_debuff) and Enemies() == 1 AssassinationUseItemActions()
	#blood_fury
	Spell(blood_fury_ap)
	#berserking
	Spell(berserking)
	#arcane_torrent,if=energy<60
	if Energy() < 60 Spell(arcane_torrent_energy)

	unless { BuffPresent(stealthed_buff any=1) or BuffPresent(vanish_buff) } and Spell(mutilate) or { ComboPoints() >= 4 and not Talent(anticipation_talent) or ComboPoints() == 5 } and target.TicksRemaining(rupture_debuff) < 3 and Spell(rupture) or Enemies() > 1 and not target.DebuffPresent(rupture_debuff) and ComboPoints() == 5 and Spell(rupture)
	{
		#shadow_reflection,if=combo_points>4|target.time_to_die<=20
		if ComboPoints() > 4 or target.TimeToDie() <= 20 Spell(shadow_reflection)
		#vendetta,if=buff.shadow_reflection.up|!talent.shadow_reflection.enabled|target.time_to_die<=20|(target.time_to_die<=30&glyph.vendetta.enabled)
		if BuffPresent(shadow_reflection_buff) or not Talent(shadow_reflection_talent) or target.TimeToDie() <= 20 or target.TimeToDie() <= 30 and Glyph(glyph_of_vendetta) Spell(vendetta)

		unless ComboPoints() == 5 and target.DebuffRemaining(rupture_debuff) <= BaseDuration(rupture_debuff) * 0.3 and Enemies() > 1 and Spell(rupture)
		{
			unless ComboPoints() == 5 and { not SpellCooldown(death_from_above) > 0 and Talent(death_from_above_talent) or BuffExpires(envenom_buff) or not Talent(anticipation_talent) or BuffStacks(anticipation_buff) + ComboPoints() >= 6 } and AssassinationFinishersCdPostConditions()
			{
				unless target.DebuffRemaining(rupture_debuff) < 2 and AssassinationFinishersCdPostConditions()
				{
					#call_action_list,name=generators
					AssassinationGeneratorsCdActions()
				}
			}
		}
	}
}

### actions.finishers

AddFunction AssassinationFinishersMainActions
{
	#rupture,cycle_targets=1,if=(remains<2|(combo_points=5&remains<=(duration*0.3)))
	if target.DebuffRemaining(rupture_debuff) < 2 or ComboPoints() == 5 and target.DebuffRemaining(rupture_debuff) <= BaseDuration(rupture_debuff) * 0.3 Spell(rupture)
	#pool_resource,for_next=1
	#death_from_above,if=(cooldown.vendetta.remains>10|debuff.vendetta.up|target.time_to_die<=25)
	if SpellCooldown(vendetta) > 10 or target.DebuffPresent(vendetta_debuff) or target.TimeToDie() <= 25 Spell(death_from_above)
	unless { SpellCooldown(vendetta) > 10 or target.DebuffPresent(vendetta_debuff) or target.TimeToDie() <= 25 } and SpellUsable(death_from_above) and SpellCooldown(death_from_above) < TimeToEnergyFor(death_from_above)
	{
		#envenom,cycle_targets=1,if=dot.deadly_poison_dot.remains<4&target.health.pct<=35&(energy+energy.regen*cooldown.vendetta.remains>=105&(buff.envenom.remains<=1.8|energy>45))|buff.bloodlust.up|debuff.vendetta.up
		if target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and target.HealthPercent() <= 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 45 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) Spell(envenom)
		#envenom,cycle_targets=1,if=dot.deadly_poison_dot.remains<4&target.health.pct>35&(energy+energy.regen*cooldown.vendetta.remains>=105&(buff.envenom.remains<=1.8|energy>55))|buff.bloodlust.up|debuff.vendetta.up
		if target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and target.HealthPercent() > 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 55 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) Spell(envenom)
		#envenom,if=target.health.pct<=35&(energy+energy.regen*cooldown.vendetta.remains>=105&(buff.envenom.remains<=1.8|energy>45))|buff.bloodlust.up|debuff.vendetta.up
		if target.HealthPercent() <= 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 45 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) Spell(envenom)
		#envenom,if=target.health.pct>35&(energy+energy.regen*cooldown.vendetta.remains>=105&(buff.envenom.remains<=1.8|energy>55))|buff.bloodlust.up|debuff.vendetta.up
		if target.HealthPercent() > 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 55 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) Spell(envenom)
	}
}

AddFunction AssassinationFinishersCdPostConditions
{
	{ target.DebuffRemaining(rupture_debuff) < 2 or ComboPoints() == 5 and target.DebuffRemaining(rupture_debuff) <= BaseDuration(rupture_debuff) * 0.3 } and Spell(rupture) or { SpellCooldown(vendetta) > 10 or target.DebuffPresent(vendetta_debuff) or target.TimeToDie() <= 25 } and Spell(death_from_above) or not { { SpellCooldown(vendetta) > 10 or target.DebuffPresent(vendetta_debuff) or target.TimeToDie() <= 25 } and SpellUsable(death_from_above) and SpellCooldown(death_from_above) < TimeToEnergyFor(death_from_above) } and { { target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and target.HealthPercent() <= 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 45 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) } and Spell(envenom) or { target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and target.HealthPercent() > 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 55 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) } and Spell(envenom) or { target.HealthPercent() <= 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 45 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) } and Spell(envenom) or { target.HealthPercent() > 35 and Energy() + EnergyRegenRate() * SpellCooldown(vendetta) >= 105 and { BuffRemaining(envenom_buff) <= 1.8 or Energy() > 55 } or BuffPresent(burst_haste_buff any=1) or target.DebuffPresent(vendetta_debuff) } and Spell(envenom) }
}

### actions.generators

AddFunction AssassinationGeneratorsMainActions
{
	#dispatch,cycle_targets=1,if=dot.deadly_poison_dot.remains<4&talent.anticipation.enabled&((anticipation_charges<4&set_bonus.tier18_4pc=0)|(anticipation_charges<2&set_bonus.tier18_4pc=1))
	if target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and Talent(anticipation_talent) and { BuffStacks(anticipation_buff) < 4 and ArmorSetBonus(T18 4) == 0 or BuffStacks(anticipation_buff) < 2 and ArmorSetBonus(T18 4) == 1 } Spell(dispatch)
	#dispatch,cycle_targets=1,if=dot.deadly_poison_dot.remains<4&!talent.anticipation.enabled&combo_points<5&set_bonus.tier18_4pc=0
	if target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and not Talent(anticipation_talent) and ComboPoints() < 5 and ArmorSetBonus(T18 4) == 0 Spell(dispatch)
	#dispatch,cycle_targets=1,if=dot.deadly_poison_dot.remains<4&!talent.anticipation.enabled&set_bonus.tier18_4pc=1&(combo_points<2|target.health.pct<35)
	if target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and not Talent(anticipation_talent) and ArmorSetBonus(T18 4) == 1 and { ComboPoints() < 2 or target.HealthPercent() < 35 } Spell(dispatch)
	#dispatch,if=talent.anticipation.enabled&((anticipation_charges<4&set_bonus.tier18_4pc=0)|(anticipation_charges<2&set_bonus.tier18_4pc=1))
	if Talent(anticipation_talent) and { BuffStacks(anticipation_buff) < 4 and ArmorSetBonus(T18 4) == 0 or BuffStacks(anticipation_buff) < 2 and ArmorSetBonus(T18 4) == 1 } Spell(dispatch)
	#dispatch,if=!talent.anticipation.enabled&combo_points<5&set_bonus.tier18_4pc=0
	if not Talent(anticipation_talent) and ComboPoints() < 5 and ArmorSetBonus(T18 4) == 0 Spell(dispatch)
	#dispatch,if=!talent.anticipation.enabled&set_bonus.tier18_4pc=1&(combo_points<2|target.health.pct<35)
	if not Talent(anticipation_talent) and ArmorSetBonus(T18 4) == 1 and { ComboPoints() < 2 or target.HealthPercent() < 35 } Spell(dispatch)
	#mutilate,cycle_targets=1,if=dot.deadly_poison_dot.remains<4&target.health.pct>35&(combo_points<5|(talent.anticipation.enabled&anticipation_charges<3))
	if target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and target.HealthPercent() > 35 and { ComboPoints() < 5 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 3 } Spell(mutilate)
	#mutilate,if=target.health.pct>35&(combo_points<5|(talent.anticipation.enabled&anticipation_charges<3))
	if target.HealthPercent() > 35 and { ComboPoints() < 5 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 3 } Spell(mutilate)
}

AddFunction AssassinationGeneratorsCdActions
{
	unless target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and Talent(anticipation_talent) and { BuffStacks(anticipation_buff) < 4 and ArmorSetBonus(T18 4) == 0 or BuffStacks(anticipation_buff) < 2 and ArmorSetBonus(T18 4) == 1 } and Spell(dispatch) or target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and not Talent(anticipation_talent) and ComboPoints() < 5 and ArmorSetBonus(T18 4) == 0 and Spell(dispatch) or target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and not Talent(anticipation_talent) and ArmorSetBonus(T18 4) == 1 and { ComboPoints() < 2 or target.HealthPercent() < 35 } and Spell(dispatch) or Talent(anticipation_talent) and { BuffStacks(anticipation_buff) < 4 and ArmorSetBonus(T18 4) == 0 or BuffStacks(anticipation_buff) < 2 and ArmorSetBonus(T18 4) == 1 } and Spell(dispatch) or not Talent(anticipation_talent) and ComboPoints() < 5 and ArmorSetBonus(T18 4) == 0 and Spell(dispatch) or not Talent(anticipation_talent) and ArmorSetBonus(T18 4) == 1 and { ComboPoints() < 2 or target.HealthPercent() < 35 } and Spell(dispatch) or target.DebuffRemaining(deadly_poison_dot_debuff) < 4 and target.HealthPercent() > 35 and { ComboPoints() < 5 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 3 } and Spell(mutilate) or target.HealthPercent() > 35 and { ComboPoints() < 5 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 3 } and Spell(mutilate)
	{
		#preparation,if=(cooldown.vanish.remains>50|!glyph.disappearance.enabled&cooldown.vanish.remains>110)&buff.vanish.down&buff.stealth.down
		if { SpellCooldown(vanish) > 50 or not Glyph(glyph_of_disappearance) and SpellCooldown(vanish) > 110 } and BuffExpires(vanish_buff) and BuffExpires(stealthed_buff any=1) Spell(preparation)
	}
}

### actions.precombat

AddFunction AssassinationPrecombatMainActions
{
	#flask,type=greater_draenic_agility_flask
	#food,type=sleeper_sushi
	#apply_poison,lethal=deadly
	if BuffRemaining(lethal_poison_buff) < 1200 Spell(deadly_poison)
	#stealth
	Spell(stealth)
	#slice_and_dice,if=talent.marked_for_death.enabled
	if Talent(marked_for_death_talent) Spell(slice_and_dice)
}

AddFunction AssassinationPrecombatShortCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth)
	{
		#marked_for_death
		Spell(marked_for_death)
	}
}

AddFunction AssassinationPrecombatShortCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth) or Talent(marked_for_death_talent) and Spell(slice_and_dice)
}

AddFunction AssassinationPrecombatCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison)
	{
		#snapshot_stats
		#potion,name=draenic_agility
		AssassinationUsePotionAgility()
	}
}

AddFunction AssassinationPrecombatCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth) or Talent(marked_for_death_talent) and Spell(slice_and_dice)
}

### Assassination icons.

AddCheckBox(opt_rogue_assassination_aoe L(AOE) default specialization=assassination)

AddIcon checkbox=!opt_rogue_assassination_aoe enemies=1 help=shortcd specialization=assassination
{
	if not InCombat() AssassinationPrecombatShortCdActions()
	unless not InCombat() and AssassinationPrecombatShortCdPostConditions()
	{
		AssassinationDefaultShortCdActions()
	}
}

AddIcon checkbox=opt_rogue_assassination_aoe help=shortcd specialization=assassination
{
	if not InCombat() AssassinationPrecombatShortCdActions()
	unless not InCombat() and AssassinationPrecombatShortCdPostConditions()
	{
		AssassinationDefaultShortCdActions()
	}
}

AddIcon enemies=1 help=main specialization=assassination
{
	if not InCombat() AssassinationPrecombatMainActions()
	AssassinationDefaultMainActions()
}

AddIcon checkbox=opt_rogue_assassination_aoe help=aoe specialization=assassination
{
	if not InCombat() AssassinationPrecombatMainActions()
	AssassinationDefaultMainActions()
}

AddIcon checkbox=!opt_rogue_assassination_aoe enemies=1 help=cd specialization=assassination
{
	if not InCombat() AssassinationPrecombatCdActions()
	unless not InCombat() and AssassinationPrecombatCdPostConditions()
	{
		AssassinationDefaultCdActions()
	}
}

AddIcon checkbox=opt_rogue_assassination_aoe help=cd specialization=assassination
{
	if not InCombat() AssassinationPrecombatCdActions()
	unless not InCombat() and AssassinationPrecombatCdPostConditions()
	{
		AssassinationDefaultCdActions()
	}
}

### Required symbols
# anticipation_buff
# anticipation_talent
# arcane_torrent_energy
# berserking
# blindside_buff
# blood_fury_ap
# cheap_shot
# deadly_poison
# deadly_poison_dot_debuff
# deadly_throw
# death_from_above
# death_from_above_talent
# dispatch
# draenic_agility_potion
# envenom
# envenom_buff
# glyph_of_disappearance
# glyph_of_vendetta
# kick
# kidney_shot
# legendary_ring_agility
# lethal_poison_buff
# marked_for_death
# marked_for_death_talent
# mutilate
# preparation
# quaking_palm
# rupture
# rupture_debuff
# shadow_reflection
# shadow_reflection_buff
# shadow_reflection_talent
# shadowstep
# slice_and_dice
# stealth
# vanish
# vanish_buff
# vendetta
# vendetta_debuff
]]
	OvaleScripts:RegisterScript("ROGUE", "assassination", name, desc, code, "script")
end

do
	local name = "simulationcraft_rogue_combat_t18m"
	local desc = "[6.2] SimulationCraft: Rogue_Combat_T18M"
	local code = [[
# Based on SimulationCraft profile "Rogue_Combat_T18M".
#	class=rogue
#	spec=combat
#	talents=3000021
#	glyphs=energy/disappearance

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_rogue_spells)

AddCheckBox(opt_interrupt L(interrupt) default specialization=combat)
AddCheckBox(opt_melee_range L(not_in_melee_range) specialization=combat)
AddCheckBox(opt_potion_agility ItemName(draenic_agility_potion) default specialization=combat)
AddCheckBox(opt_legendary_ring_agility ItemName(legendary_ring_agility) default specialization=combat)
AddCheckBox(opt_blade_flurry SpellName(blade_flurry) default specialization=combat)
AddCheckBox(opt_vanish SpellName(vanish) default specialization=combat)

AddFunction CombatUsePotionAgility
{
	if CheckBoxOn(opt_potion_agility) and target.Classification(worldboss) Item(draenic_agility_potion usable=1)
}

AddFunction CombatUseItemActions
{
	Item(Trinket0Slot usable=1)
	Item(Trinket1Slot usable=1)
}

AddFunction CombatGetInMeleeRange
{
	if CheckBoxOn(opt_melee_range) and not target.InRange(kick)
	{
		Spell(shadowstep)
		Texture(misc_arrowlup help=L(not_in_melee_range))
	}
}

AddFunction CombatInterruptActions
{
	if CheckBoxOn(opt_interrupt) and not target.IsFriend() and target.IsInterruptible()
	{
		if target.InRange(kick) Spell(kick)
		if not target.Classification(worldboss)
		{
			if target.InRange(cheap_shot) Spell(cheap_shot)
			if target.InRange(deadly_throw) and ComboPoints() == 5 Spell(deadly_throw)
			if target.InRange(kidney_shot) Spell(kidney_shot)
			Spell(arcane_torrent_energy)
			if target.InRange(quaking_palm) Spell(quaking_palm)
		}
	}
}

### actions.default

AddFunction CombatDefaultMainActions
{
	#pool_resource,for_next=1
	#ambush
	Spell(ambush)
	unless SpellUsable(ambush) and SpellCooldown(ambush) < TimeToEnergyFor(ambush)
	{
		#slice_and_dice,if=buff.slice_and_dice.remains<2&(dot.revealing_strike.ticking|time>10)|(target.time_to_die>45&combo_points=5&buff.slice_and_dice.remains<12&buff.deep_insight.down)
		if { BuffRemaining(slice_and_dice_buff) < 2 and { target.DebuffPresent(revealing_strike_debuff) or TimeInCombat() > 10 } or target.TimeToDie() > 45 and ComboPoints() == 5 and BuffRemaining(slice_and_dice_buff) < 12 and BuffExpires(deep_insight_buff) } and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) Spell(slice_and_dice)
		#call_action_list,name=finisher,if=combo_points=5&dot.revealing_strike.ticking&(buff.deep_insight.up|!talent.anticipation.enabled|(talent.anticipation.enabled&anticipation_charges>=3))
		if ComboPoints() == 5 and target.DebuffPresent(revealing_strike_debuff) and { BuffPresent(deep_insight_buff) or not Talent(anticipation_talent) or Talent(anticipation_talent) and BuffStacks(anticipation_buff) >= 3 } CombatFinisherMainActions()
		#call_action_list,name=generator,if=combo_points<5|!dot.revealing_strike.ticking|(talent.anticipation.enabled&anticipation_charges<3&buff.deep_insight.down)
		if ComboPoints() < 5 or not target.DebuffPresent(revealing_strike_debuff) or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 3 and BuffExpires(deep_insight_buff) CombatGeneratorMainActions()
	}
}

AddFunction CombatDefaultShortCdActions
{
	#blade_flurry,if=(spell_targets.blade_flurry>=2&!buff.blade_flurry.up)|(spell_targets.blade_flurry<2&buff.blade_flurry.up)
	if { Enemies() >= 2 and not BuffPresent(blade_flurry_buff) or Enemies() < 2 and BuffPresent(blade_flurry_buff) } and CheckBoxOn(opt_blade_flurry) Spell(blade_flurry)
	#pool_resource,for_next=1
	#ambush
	unless SpellUsable(ambush) and SpellCooldown(ambush) < TimeToEnergyFor(ambush)
	{
		#auto_attack
		CombatGetInMeleeRange()
		#vanish,if=time>25&(combo_points<4|(talent.anticipation.enabled&anticipation_charges<4))&((talent.shadow_focus.enabled&energy.time_to_max>2.5&energy>=15)|(talent.subterfuge.enabled&energy>=90)|(!talent.shadow_focus.enabled&!talent.subterfuge.enabled&energy>=60))
		if TimeInCombat() > 25 and { ComboPoints() < 4 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 4 } and { Talent(shadow_focus_talent) and TimeToMaxEnergy() > 2.5 and Energy() >= 15 or Talent(subterfuge_talent) and Energy() >= 90 or not Talent(shadow_focus_talent) and not Talent(subterfuge_talent) and Energy() >= 60 } and { CheckBoxOn(opt_vanish) or not SpellCooldown(preparation) > 0 } Spell(vanish)

		unless { BuffRemaining(slice_and_dice_buff) < 2 and { target.DebuffPresent(revealing_strike_debuff) or TimeInCombat() > 10 } or target.TimeToDie() > 45 and ComboPoints() == 5 and BuffRemaining(slice_and_dice_buff) < 12 and BuffExpires(deep_insight_buff) } and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) and Spell(slice_and_dice)
		{
			#marked_for_death,if=combo_points<=1&dot.revealing_strike.ticking&(!talent.shadow_reflection.enabled|buff.shadow_reflection.up|cooldown.shadow_reflection.remains>30)
			if ComboPoints() <= 1 and target.DebuffPresent(revealing_strike_debuff) and { not Talent(shadow_reflection_talent) or BuffPresent(shadow_reflection_buff) or SpellCooldown(shadow_reflection) > 30 } Spell(marked_for_death)
		}
	}
}

AddFunction CombatDefaultCdActions
{
	#potion,name=draenic_agility,if=buff.bloodlust.react|target.time_to_die<40|(buff.adrenaline_rush.up&buff.maalus.up&(trinket.proc.any.react|trinket.stacking_proc.any.react|buff.archmages_greater_incandescence_agi.react))
	if BuffPresent(burst_haste_buff any=1) or target.TimeToDie() < 40 or BuffPresent(adrenaline_rush_buff) and BuffPresent(maalus_buff) and { BuffPresent(trinket_proc_any_buff) or BuffPresent(trinket_stacking_proc_any_buff) or BuffPresent(archmages_greater_incandescence_agi_buff) } CombatUsePotionAgility()
	#kick,if=target.debuff.casting.react
	if target.IsInterruptible() CombatInterruptActions()
	#preparation,if=!buff.vanish.up&cooldown.vanish.remains>30
	if not BuffPresent(vanish_buff) and SpellCooldown(vanish) > 30 Spell(preparation)
	#use_item,slot=finger1,if=buff.adrenaline_rush.up
	if BuffPresent(adrenaline_rush_buff) and CheckBoxOn(opt_legendary_ring_agility) Item(legendary_ring_agility usable=1)
	#use_item,slot=trinket1,if=buff.adrenaline_rush.up
	if BuffPresent(adrenaline_rush_buff) CombatUseItemActions()
	#blood_fury
	Spell(blood_fury_ap)
	#berserking
	Spell(berserking)
	#arcane_torrent,if=energy<60
	if Energy() < 60 Spell(arcane_torrent_energy)
	#shadow_reflection,if=(cooldown.killing_spree.remains<10&combo_points>3)|buff.adrenaline_rush.up
	if SpellCooldown(killing_spree) < 10 and ComboPoints() > 3 or BuffPresent(adrenaline_rush_buff) Spell(shadow_reflection)
	#pool_resource,for_next=1
	#ambush
	unless SpellUsable(ambush) and SpellCooldown(ambush) < TimeToEnergyFor(ambush)
	{
		#shadowmeld,if=(combo_points<4|(talent.anticipation.enabled&anticipation_charges<4))&energy>=60
		if { ComboPoints() < 4 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 4 } and Energy() >= 60 Spell(shadowmeld)

		unless { BuffRemaining(slice_and_dice_buff) < 2 and { target.DebuffPresent(revealing_strike_debuff) or TimeInCombat() > 10 } or target.TimeToDie() > 45 and ComboPoints() == 5 and BuffRemaining(slice_and_dice_buff) < 12 and BuffExpires(deep_insight_buff) } and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) and Spell(slice_and_dice)
		{
			#call_action_list,name=adrenaline_rush,if=dot.revealing_strike.ticking&buff.adrenaline_rush.down
			if target.DebuffPresent(revealing_strike_debuff) and BuffExpires(adrenaline_rush_buff) CombatAdrenalineRushCdActions()
			#call_action_list,name=killing_spree,if=energy.time_to_max>6&(!talent.shadow_reflection.enabled|cooldown.shadow_reflection.remains>30|buff.shadow_reflection.remains>8)
			if TimeToMaxEnergy() > 6 and { not Talent(shadow_reflection_talent) or SpellCooldown(shadow_reflection) > 30 or BuffRemaining(shadow_reflection_buff) > 8 } CombatKillingSpreeCdActions()
		}
	}
}

### actions.adrenaline_rush

AddFunction CombatAdrenalineRushCdActions
{
	#adrenaline_rush,if=target.time_to_die>=75
	if target.TimeToDie() >= 75 Spell(adrenaline_rush)
	#adrenaline_rush,if=target.time_to_die<75&(buff.maalus.up|trinket.proc.any.react|trinket.stacking_proc.any.react)
	if target.TimeToDie() < 75 and { BuffPresent(maalus_buff) or BuffPresent(trinket_proc_any_buff) or BuffPresent(trinket_stacking_proc_any_buff) } Spell(adrenaline_rush)
	#adrenaline_rush,if=target.time_to_die<=buff.adrenaline_rush.duration*2
	if target.TimeToDie() <= BaseDuration(adrenaline_rush_buff) * 2 Spell(adrenaline_rush)
}

### actions.finisher

AddFunction CombatFinisherMainActions
{
	#death_from_above
	Spell(death_from_above)
	#eviscerate,if=(!talent.death_from_above.enabled|cooldown.death_from_above.remains)
	if not Talent(death_from_above_talent) or SpellCooldown(death_from_above) > 0 Spell(eviscerate)
}

### actions.generator

AddFunction CombatGeneratorMainActions
{
	#revealing_strike,if=(combo_points=4&dot.revealing_strike.remains<7.2&(target.time_to_die>dot.revealing_strike.remains+7.2)|(target.time_to_die<dot.revealing_strike.remains+7.2&ticks_remain<2))|!ticking
	if ComboPoints() == 4 and target.DebuffRemaining(revealing_strike_debuff) < 7.2 and target.TimeToDie() > target.DebuffRemaining(revealing_strike_debuff) + 7.2 or target.TimeToDie() < target.DebuffRemaining(revealing_strike_debuff) + 7.2 and target.TicksRemaining(revealing_strike_debuff) < 2 or not target.DebuffPresent(revealing_strike_debuff) Spell(revealing_strike)
	#sinister_strike,if=dot.revealing_strike.ticking
	if target.DebuffPresent(revealing_strike_debuff) Spell(sinister_strike)
}

### actions.killing_spree

AddFunction CombatKillingSpreeCdActions
{
	#killing_spree,if=target.time_to_die>=25
	if target.TimeToDie() >= 25 Spell(killing_spree)
	#killing_spree,if=target.time_to_die<25&(buff.maalus.up&buff.maalus.remains>=buff.killing_spree.duration|trinket.proc.any.react&trinket.proc.any.remains>=buff.killing_spree.duration|trinket.stacking_proc.any.react&trinket.stacking_proc.any.remains>=buff.killing_spree.duration)
	if target.TimeToDie() < 25 and { BuffPresent(maalus_buff) and BuffRemaining(maalus_buff) >= BaseDuration(killing_spree_buff) or BuffPresent(trinket_proc_any_buff) and BuffRemaining(trinket_proc_any_buff) >= BaseDuration(killing_spree_buff) or BuffPresent(trinket_stacking_proc_any_buff) and BuffRemaining(trinket_stacking_proc_any_buff) >= BaseDuration(killing_spree_buff) } Spell(killing_spree)
	#killing_spree,if=target.time_to_die<=buff.killing_spree.duration*5
	if target.TimeToDie() <= BaseDuration(killing_spree_buff) * 5 Spell(killing_spree)
}

### actions.precombat

AddFunction CombatPrecombatMainActions
{
	#flask,type=greater_draenic_agility_flask
	#food,type=felmouth_frenzy
	#apply_poison,lethal=deadly
	if BuffRemaining(lethal_poison_buff) < 1200 Spell(deadly_poison)
	#stealth
	Spell(stealth)
	#slice_and_dice,if=talent.marked_for_death.enabled
	if Talent(marked_for_death_talent) and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) Spell(slice_and_dice)
}

AddFunction CombatPrecombatShortCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth)
	{
		#marked_for_death
		Spell(marked_for_death)
	}
}

AddFunction CombatPrecombatShortCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth) or Talent(marked_for_death_talent) and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) and Spell(slice_and_dice)
}

AddFunction CombatPrecombatCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison)
	{
		#snapshot_stats
		#potion,name=draenic_agility
		CombatUsePotionAgility()
	}
}

AddFunction CombatPrecombatCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth) or Talent(marked_for_death_talent) and BuffRemaining(slice_and_dice_buff) < BaseDuration(slice_and_dice_buff) and Spell(slice_and_dice)
}

### Combat icons.

AddCheckBox(opt_rogue_combat_aoe L(AOE) default specialization=combat)

AddIcon checkbox=!opt_rogue_combat_aoe enemies=1 help=shortcd specialization=combat
{
	if not InCombat() CombatPrecombatShortCdActions()
	unless not InCombat() and CombatPrecombatShortCdPostConditions()
	{
		CombatDefaultShortCdActions()
	}
}

AddIcon checkbox=opt_rogue_combat_aoe help=shortcd specialization=combat
{
	if not InCombat() CombatPrecombatShortCdActions()
	unless not InCombat() and CombatPrecombatShortCdPostConditions()
	{
		CombatDefaultShortCdActions()
	}
}

AddIcon enemies=1 help=main specialization=combat
{
	if not InCombat() CombatPrecombatMainActions()
	CombatDefaultMainActions()
}

AddIcon checkbox=opt_rogue_combat_aoe help=aoe specialization=combat
{
	if not InCombat() CombatPrecombatMainActions()
	CombatDefaultMainActions()
}

AddIcon checkbox=!opt_rogue_combat_aoe enemies=1 help=cd specialization=combat
{
	if not InCombat() CombatPrecombatCdActions()
	unless not InCombat() and CombatPrecombatCdPostConditions()
	{
		CombatDefaultCdActions()
	}
}

AddIcon checkbox=opt_rogue_combat_aoe help=cd specialization=combat
{
	if not InCombat() CombatPrecombatCdActions()
	unless not InCombat() and CombatPrecombatCdPostConditions()
	{
		CombatDefaultCdActions()
	}
}

### Required symbols
# adrenaline_rush
# adrenaline_rush_buff
# ambush
# anticipation_buff
# anticipation_talent
# arcane_torrent_energy
# archmages_greater_incandescence_agi_buff
# berserking
# blade_flurry
# blade_flurry_buff
# blood_fury_ap
# cheap_shot
# deadly_poison
# deadly_throw
# death_from_above
# death_from_above_talent
# deep_insight_buff
# draenic_agility_potion
# eviscerate
# kick
# kidney_shot
# killing_spree
# killing_spree_buff
# legendary_ring_agility
# lethal_poison_buff
# maalus_buff
# marked_for_death
# marked_for_death_talent
# preparation
# quaking_palm
# revealing_strike
# revealing_strike_debuff
# shadow_focus_talent
# shadow_reflection
# shadow_reflection_buff
# shadow_reflection_talent
# shadowmeld
# shadowstep
# sinister_strike
# slice_and_dice
# slice_and_dice_buff
# stealth
# subterfuge_talent
# vanish
# vanish_buff
]]
	OvaleScripts:RegisterScript("ROGUE", "combat", name, desc, code, "script")
end

do
	local name = "simulationcraft_rogue_subtlety_t18m"
	local desc = "[6.2] SimulationCraft: Rogue_Subtlety_T18M"
	local code = [[
# Based on SimulationCraft profile "Rogue_Subtlety_T18M".
#	class=rogue
#	spec=subtlety
#	talents=2000032
#	glyphs=energy/hemorrhaging_veins/vanish

Include(ovale_common)
Include(ovale_trinkets_mop)
Include(ovale_trinkets_wod)
Include(ovale_rogue_spells)

Define(honor_among_thieves_cooldown_buff 51699)
	SpellInfo(honor_among_thieves_cooldown_buff duration=2.2)

AddCheckBox(opt_interrupt L(interrupt) default specialization=subtlety)
AddCheckBox(opt_melee_range L(not_in_melee_range) specialization=subtlety)
AddCheckBox(opt_potion_agility ItemName(draenic_agility_potion) default specialization=subtlety)
AddCheckBox(opt_legendary_ring_agility ItemName(legendary_ring_agility) default specialization=subtlety)

AddFunction SubtletyUsePotionAgility
{
	if CheckBoxOn(opt_potion_agility) and target.Classification(worldboss) Item(draenic_agility_potion usable=1)
}

AddFunction SubtletyUseItemActions
{
	Item(Trinket0Slot usable=1)
	Item(Trinket1Slot usable=1)
}

AddFunction SubtletyGetInMeleeRange
{
	if CheckBoxOn(opt_melee_range) and not target.InRange(kick)
	{
		Spell(shadowstep)
		Texture(misc_arrowlup help=L(not_in_melee_range))
	}
}

AddFunction SubtletyInterruptActions
{
	if CheckBoxOn(opt_interrupt) and not target.IsFriend() and target.IsInterruptible()
	{
		if target.InRange(kick) Spell(kick)
		if not target.Classification(worldboss)
		{
			if target.InRange(cheap_shot) Spell(cheap_shot)
			if target.InRange(deadly_throw) and ComboPoints() == 5 Spell(deadly_throw)
			if target.InRange(kidney_shot) Spell(kidney_shot)
			Spell(arcane_torrent_energy)
			if target.InRange(quaking_palm) Spell(quaking_palm)
		}
	}
}

### actions.default

AddFunction SubtletyDefaultMainActions
{
	#premeditation,if=combo_points<4
	if ComboPoints() < 4 and ComboPoints() < 5 Spell(premeditation)
	#hemorrhage,if=set_bonus.tier18_4pc=0&glyph.hemorrhaging_veins.enabled&time<1&!ticking&!dot.rupture.ticking&!dot.crimson_tempest.ticking&!dot.garrote.ticking
	if ArmorSetBonus(T18 4) == 0 and Glyph(glyph_of_hemorrhaging_veins) and TimeInCombat() < 1 and not target.DebuffPresent(hemorrhage_debuff) and not target.DebuffPresent(rupture_debuff) and not target.DebuffPresent(crimson_tempest_debuff) and not target.DebuffPresent(garrote_debuff) Spell(hemorrhage)
	#garrote,if=set_bonus.tier18_4pc=0&time<1&!ticking&!dot.rupture.ticking&!dot.crimson_tempest.ticking&!dot.hemorrhage.ticking
	if ArmorSetBonus(T18 4) == 0 and TimeInCombat() < 1 and not target.DebuffPresent(garrote_debuff) and not target.DebuffPresent(rupture_debuff) and not target.DebuffPresent(crimson_tempest_debuff) and not target.DebuffPresent(hemorrhage_debuff) Spell(garrote)
	#wait,sec=buff.subterfuge.remains-0.1,if=buff.subterfuge.remains>0.5&buff.subterfuge.remains<1.6&time>6
	unless BuffRemaining(subterfuge_buff) > 0.5 and BuffRemaining(subterfuge_buff) < 1.6 and TimeInCombat() > 6 and BuffRemaining(subterfuge_buff) - 0.1 > 0
	{
		#pool_resource,if=energy<110&cooldown.shadow_dance.remains<3.5
		unless Energy() < 110 and SpellCooldown(shadow_dance) < 3.5
		{
			#pool_resource,for_next=1,extra_amount=110
			#shadow_dance,if=energy>=110&buff.stealth.down|((buff.bloodlust.up|buff.deathly_shadows.up)&(dot.hemorrhage.ticking|dot.garrote.ticking|dot.rupture.ticking))
			unless { True(pool_energy 110) and BuffExpires(stealthed_buff any=1) or { BuffPresent(burst_haste_buff any=1) or BuffPresent(deathly_shadows_buff) } and { target.DebuffPresent(hemorrhage_debuff) or target.DebuffPresent(garrote_debuff) or target.DebuffPresent(rupture_debuff) } } and SpellUsable(shadow_dance) and SpellCooldown(shadow_dance) < TimeToEnergy(110)
			{
				#pool_resource,for_next=1,extra_amount=50
				#shadowmeld,if=talent.shadow_focus.enabled&energy>=45&energy<=75&combo_points<4-talent.anticipation.enabled&buff.stealth.down&buff.shadow_dance.down&buff.master_of_subtlety.down&debuff.find_weakness.down
				unless Talent(shadow_focus_talent) and True(pool_energy 50) and Energy() <= 75 and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(stealthed_buff any=1) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) and SpellUsable(shadowmeld) and SpellCooldown(shadowmeld) < TimeToEnergy(50)
				{
					#pool_resource,for_next=1,extra_amount=50
					#vanish,if=talent.shadow_focus.enabled&energy>=45&energy<=75&combo_points<4-talent.anticipation.enabled&buff.shadow_dance.down&buff.master_of_subtlety.down&debuff.find_weakness.down
					unless Talent(shadow_focus_talent) and True(pool_energy 50) and Energy() <= 75 and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) and SpellUsable(vanish) and SpellCooldown(vanish) < TimeToEnergy(50)
					{
						#pool_resource,for_next=1,extra_amount=115
						#shadowmeld,if=talent.subterfuge.enabled&energy>=115&combo_points<4-talent.anticipation.enabled&buff.stealth.down&buff.shadow_dance.down&buff.master_of_subtlety.down&debuff.find_weakness.down
						unless Talent(subterfuge_talent) and True(pool_energy 115) and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(stealthed_buff any=1) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) and SpellUsable(shadowmeld) and SpellCooldown(shadowmeld) < TimeToEnergy(115)
						{
							#pool_resource,for_next=1,extra_amount=115
							#vanish,if=talent.subterfuge.enabled&energy>=115&combo_points<4-talent.anticipation.enabled&buff.shadow_dance.down&(!cooldown.shadow_dance.up|set_bonus.tier18_4pc=1)
							unless Talent(subterfuge_talent) and True(pool_energy 115) and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(shadow_dance_buff) and { not { not SpellCooldown(shadow_dance) > 0 } or ArmorSetBonus(T18 4) == 1 } and SpellUsable(vanish) and SpellCooldown(vanish) < TimeToEnergy(115)
							{
								#run_action_list,name=finisher,if=combo_points=5&debuff.find_weakness.remains&buff.shadow_reflection.remains
								if ComboPoints() == 5 and target.DebuffPresent(find_weakness_debuff) and BuffPresent(shadow_reflection_buff) SubtletyFinisherMainActions()
								#pool_resource,for_next=1
								#ambush,if=talent.anticipation.enabled&combo_points+anticipation_charges<8&time>2
								if Talent(anticipation_talent) and ComboPoints() + BuffStacks(anticipation_buff) < 8 and TimeInCombat() > 2 Spell(ambush)
								unless Talent(anticipation_talent) and ComboPoints() + BuffStacks(anticipation_buff) < 8 and TimeInCombat() > 2 and SpellUsable(ambush) and SpellCooldown(ambush) < TimeToEnergyFor(ambush)
								{
									#run_action_list,name=finisher,if=combo_points=5
									if ComboPoints() == 5 SubtletyFinisherMainActions()
									#run_action_list,name=generator,if=combo_points<4|(talent.anticipation.enabled&anticipation_charges<3&debuff.find_weakness.down)
									if ComboPoints() < 4 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 3 and target.DebuffExpires(find_weakness_debuff) SubtletyGeneratorMainActions()
								}
							}
						}
					}
				}
			}
		}
	}
}

AddFunction SubtletyDefaultShortCdActions
{
	#vanish,if=set_bonus.tier18_4pc=1&time<1
	if ArmorSetBonus(T18 4) == 1 and TimeInCombat() < 1 Spell(vanish)

	unless ArmorSetBonus(T18 4) == 0 and Glyph(glyph_of_hemorrhaging_veins) and TimeInCombat() < 1 and not target.DebuffPresent(hemorrhage_debuff) and not target.DebuffPresent(rupture_debuff) and not target.DebuffPresent(crimson_tempest_debuff) and not target.DebuffPresent(garrote_debuff) and Spell(hemorrhage) or ArmorSetBonus(T18 4) == 0 and TimeInCombat() < 1 and not target.DebuffPresent(garrote_debuff) and not target.DebuffPresent(rupture_debuff) and not target.DebuffPresent(crimson_tempest_debuff) and not target.DebuffPresent(hemorrhage_debuff) and Spell(garrote)
	{
		#wait,sec=buff.subterfuge.remains-0.1,if=buff.subterfuge.remains>0.5&buff.subterfuge.remains<1.6&time>6
		unless BuffRemaining(subterfuge_buff) > 0.5 and BuffRemaining(subterfuge_buff) < 1.6 and TimeInCombat() > 6 and BuffRemaining(subterfuge_buff) - 0.1 > 0
		{
			#pool_resource,if=energy<110&cooldown.shadow_dance.remains<3.5
			unless Energy() < 110 and SpellCooldown(shadow_dance) < 3.5
			{
				#pool_resource,for_next=1,extra_amount=110
				#shadow_dance,if=energy>=110&buff.stealth.down|((buff.bloodlust.up|buff.deathly_shadows.up)&(dot.hemorrhage.ticking|dot.garrote.ticking|dot.rupture.ticking))
				if Energy() >= 110 and BuffExpires(stealthed_buff any=1) or { BuffPresent(burst_haste_buff any=1) or BuffPresent(deathly_shadows_buff) } and { target.DebuffPresent(hemorrhage_debuff) or target.DebuffPresent(garrote_debuff) or target.DebuffPresent(rupture_debuff) } Spell(shadow_dance)
				unless { True(pool_energy 110) and BuffExpires(stealthed_buff any=1) or { BuffPresent(burst_haste_buff any=1) or BuffPresent(deathly_shadows_buff) } and { target.DebuffPresent(hemorrhage_debuff) or target.DebuffPresent(garrote_debuff) or target.DebuffPresent(rupture_debuff) } } and SpellUsable(shadow_dance) and SpellCooldown(shadow_dance) < TimeToEnergy(110)
				{
					#pool_resource,for_next=1,extra_amount=50
					#shadowmeld,if=talent.shadow_focus.enabled&energy>=45&energy<=75&combo_points<4-talent.anticipation.enabled&buff.stealth.down&buff.shadow_dance.down&buff.master_of_subtlety.down&debuff.find_weakness.down
					unless Talent(shadow_focus_talent) and True(pool_energy 50) and Energy() <= 75 and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(stealthed_buff any=1) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) and SpellUsable(shadowmeld) and SpellCooldown(shadowmeld) < TimeToEnergy(50)
					{
						#pool_resource,for_next=1,extra_amount=50
						#vanish,if=talent.shadow_focus.enabled&energy>=45&energy<=75&combo_points<4-talent.anticipation.enabled&buff.shadow_dance.down&buff.master_of_subtlety.down&debuff.find_weakness.down
						if Talent(shadow_focus_talent) and Energy() >= 45 and Energy() <= 75 and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) Spell(vanish)
						unless Talent(shadow_focus_talent) and True(pool_energy 50) and Energy() <= 75 and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) and SpellUsable(vanish) and SpellCooldown(vanish) < TimeToEnergy(50)
						{
							#pool_resource,for_next=1,extra_amount=115
							#shadowmeld,if=talent.subterfuge.enabled&energy>=115&combo_points<4-talent.anticipation.enabled&buff.stealth.down&buff.shadow_dance.down&buff.master_of_subtlety.down&debuff.find_weakness.down
							unless Talent(subterfuge_talent) and True(pool_energy 115) and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(stealthed_buff any=1) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) and SpellUsable(shadowmeld) and SpellCooldown(shadowmeld) < TimeToEnergy(115)
							{
								#vanish,if=set_bonus.tier18_4pc=1&buff.shadow_reflection.up&combo_points<3
								if ArmorSetBonus(T18 4) == 1 and BuffPresent(shadow_reflection_buff) and ComboPoints() < 3 Spell(vanish)
								#pool_resource,for_next=1,extra_amount=115
								#vanish,if=talent.subterfuge.enabled&energy>=115&combo_points<4-talent.anticipation.enabled&buff.shadow_dance.down&(!cooldown.shadow_dance.up|set_bonus.tier18_4pc=1)
								if Talent(subterfuge_talent) and Energy() >= 115 and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(shadow_dance_buff) and { not { not SpellCooldown(shadow_dance) > 0 } or ArmorSetBonus(T18 4) == 1 } Spell(vanish)
								unless Talent(subterfuge_talent) and True(pool_energy 115) and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(shadow_dance_buff) and { not { not SpellCooldown(shadow_dance) > 0 } or ArmorSetBonus(T18 4) == 1 } and SpellUsable(vanish) and SpellCooldown(vanish) < TimeToEnergy(115)
								{
									#marked_for_death,if=combo_points=0
									if ComboPoints() == 0 Spell(marked_for_death)

									unless ComboPoints() == 5 and target.DebuffPresent(find_weakness_debuff) and BuffPresent(shadow_reflection_buff) and SubtletyFinisherShortCdPostConditions()
									{
										#pool_resource,for_next=1
										#ambush,if=talent.anticipation.enabled&combo_points+anticipation_charges<8&time>2
										unless Talent(anticipation_talent) and ComboPoints() + BuffStacks(anticipation_buff) < 8 and TimeInCombat() > 2 and SpellUsable(ambush) and SpellCooldown(ambush) < TimeToEnergyFor(ambush)
										{
											unless ComboPoints() == 5 and SubtletyFinisherShortCdPostConditions()
											{
												#run_action_list,name=generator,if=combo_points<4|(talent.anticipation.enabled&anticipation_charges<3&debuff.find_weakness.down)
												if ComboPoints() < 4 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 3 and target.DebuffExpires(find_weakness_debuff) SubtletyGeneratorShortCdActions()
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

AddFunction SubtletyDefaultCdActions
{
	#potion,name=draenic_agility,if=buff.bloodlust.react|target.time_to_die<40|(buff.shadow_reflection.up|(!talent.shadow_reflection.enabled&buff.shadow_dance.up))&(trinket.stat.agi.react|trinket.stat.multistrike.react|buff.archmages_greater_incandescence_agi.react)|((buff.shadow_reflection.up|(!talent.shadow_reflection.enabled&buff.shadow_dance.up))&target.time_to_die<136)
	if BuffPresent(burst_haste_buff any=1) or target.TimeToDie() < 40 or { BuffPresent(shadow_reflection_buff) or not Talent(shadow_reflection_talent) and BuffPresent(shadow_dance_buff) } and { BuffPresent(trinket_stat_agi_buff) or BuffPresent(trinket_stat_multistrike_buff) or BuffPresent(archmages_greater_incandescence_agi_buff) } or { BuffPresent(shadow_reflection_buff) or not Talent(shadow_reflection_talent) and BuffPresent(shadow_dance_buff) } and target.TimeToDie() < 136 SubtletyUsePotionAgility()
	#kick,if=target.debuff.casting.react
	if target.IsInterruptible() SubtletyInterruptActions()
	#shadow_reflection,if=buff.shadow_dance.up|(set_bonus.tier18_4pc=1&time<2)
	if BuffPresent(shadow_dance_buff) or ArmorSetBonus(T18 4) == 1 and TimeInCombat() < 2 Spell(shadow_reflection)
	#use_item,slot=finger1,if=buff.shadow_dance.up
	if BuffPresent(shadow_dance_buff) and CheckBoxOn(opt_legendary_ring_agility) Item(legendary_ring_agility usable=1)
	#use_item,slot=trinket1,if=buff.shadow_dance.up
	if BuffPresent(shadow_dance_buff) SubtletyUseItemActions()
	#blood_fury,if=buff.shadow_dance.up
	if BuffPresent(shadow_dance_buff) Spell(blood_fury_ap)
	#berserking,if=buff.shadow_dance.up
	if BuffPresent(shadow_dance_buff) Spell(berserking)
	#arcane_torrent,if=energy<80&buff.shadow_dance.up
	if Energy() < 80 and BuffPresent(shadow_dance_buff) Spell(arcane_torrent_energy)

	unless ArmorSetBonus(T18 4) == 0 and Glyph(glyph_of_hemorrhaging_veins) and TimeInCombat() < 1 and not target.DebuffPresent(hemorrhage_debuff) and not target.DebuffPresent(rupture_debuff) and not target.DebuffPresent(crimson_tempest_debuff) and not target.DebuffPresent(garrote_debuff) and Spell(hemorrhage) or ArmorSetBonus(T18 4) == 0 and TimeInCombat() < 1 and not target.DebuffPresent(garrote_debuff) and not target.DebuffPresent(rupture_debuff) and not target.DebuffPresent(crimson_tempest_debuff) and not target.DebuffPresent(hemorrhage_debuff) and Spell(garrote)
	{
		#wait,sec=buff.subterfuge.remains-0.1,if=buff.subterfuge.remains>0.5&buff.subterfuge.remains<1.6&time>6
		unless BuffRemaining(subterfuge_buff) > 0.5 and BuffRemaining(subterfuge_buff) < 1.6 and TimeInCombat() > 6 and BuffRemaining(subterfuge_buff) - 0.1 > 0
		{
			#pool_resource,if=energy<110&cooldown.shadow_dance.remains<3.5
			unless Energy() < 110 and SpellCooldown(shadow_dance) < 3.5
			{
				#pool_resource,for_next=1,extra_amount=110
				#shadow_dance,if=energy>=110&buff.stealth.down|((buff.bloodlust.up|buff.deathly_shadows.up)&(dot.hemorrhage.ticking|dot.garrote.ticking|dot.rupture.ticking))
				unless { True(pool_energy 110) and BuffExpires(stealthed_buff any=1) or { BuffPresent(burst_haste_buff any=1) or BuffPresent(deathly_shadows_buff) } and { target.DebuffPresent(hemorrhage_debuff) or target.DebuffPresent(garrote_debuff) or target.DebuffPresent(rupture_debuff) } } and SpellUsable(shadow_dance) and SpellCooldown(shadow_dance) < TimeToEnergy(110)
				{
					#pool_resource,for_next=1,extra_amount=50
					#shadowmeld,if=talent.shadow_focus.enabled&energy>=45&energy<=75&combo_points<4-talent.anticipation.enabled&buff.stealth.down&buff.shadow_dance.down&buff.master_of_subtlety.down&debuff.find_weakness.down
					if Talent(shadow_focus_talent) and Energy() >= 45 and Energy() <= 75 and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(stealthed_buff any=1) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) Spell(shadowmeld)
					unless Talent(shadow_focus_talent) and True(pool_energy 50) and Energy() <= 75 and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(stealthed_buff any=1) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) and SpellUsable(shadowmeld) and SpellCooldown(shadowmeld) < TimeToEnergy(50)
					{
						#pool_resource,for_next=1,extra_amount=50
						#vanish,if=talent.shadow_focus.enabled&energy>=45&energy<=75&combo_points<4-talent.anticipation.enabled&buff.shadow_dance.down&buff.master_of_subtlety.down&debuff.find_weakness.down
						unless Talent(shadow_focus_talent) and True(pool_energy 50) and Energy() <= 75 and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) and SpellUsable(vanish) and SpellCooldown(vanish) < TimeToEnergy(50)
						{
							#pool_resource,for_next=1,extra_amount=115
							#shadowmeld,if=talent.subterfuge.enabled&energy>=115&combo_points<4-talent.anticipation.enabled&buff.stealth.down&buff.shadow_dance.down&buff.master_of_subtlety.down&debuff.find_weakness.down
							if Talent(subterfuge_talent) and Energy() >= 115 and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(stealthed_buff any=1) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) Spell(shadowmeld)
							unless Talent(subterfuge_talent) and True(pool_energy 115) and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(stealthed_buff any=1) and BuffExpires(shadow_dance_buff) and BuffExpires(master_of_subtlety_buff) and target.DebuffExpires(find_weakness_debuff) and SpellUsable(shadowmeld) and SpellCooldown(shadowmeld) < TimeToEnergy(115)
							{
								#pool_resource,for_next=1,extra_amount=115
								#vanish,if=talent.subterfuge.enabled&energy>=115&combo_points<4-talent.anticipation.enabled&buff.shadow_dance.down&(!cooldown.shadow_dance.up|set_bonus.tier18_4pc=1)
								unless Talent(subterfuge_talent) and True(pool_energy 115) and ComboPoints() < 4 - TalentPoints(anticipation_talent) and BuffExpires(shadow_dance_buff) and { not { not SpellCooldown(shadow_dance) > 0 } or ArmorSetBonus(T18 4) == 1 } and SpellUsable(vanish) and SpellCooldown(vanish) < TimeToEnergy(115)
								{
									#run_action_list,name=finisher,if=combo_points=5&debuff.find_weakness.remains&buff.shadow_reflection.remains
									if ComboPoints() == 5 and target.DebuffPresent(find_weakness_debuff) and BuffPresent(shadow_reflection_buff) SubtletyFinisherCdActions()

									unless ComboPoints() == 5 and target.DebuffPresent(find_weakness_debuff) and BuffPresent(shadow_reflection_buff) and SubtletyFinisherCdPostConditions()
									{
										#pool_resource,for_next=1
										#ambush,if=talent.anticipation.enabled&combo_points+anticipation_charges<8&time>2
										unless Talent(anticipation_talent) and ComboPoints() + BuffStacks(anticipation_buff) < 8 and TimeInCombat() > 2 and SpellUsable(ambush) and SpellCooldown(ambush) < TimeToEnergyFor(ambush)
										{
											#run_action_list,name=finisher,if=combo_points=5
											if ComboPoints() == 5 SubtletyFinisherCdActions()

											unless ComboPoints() == 5 and SubtletyFinisherCdPostConditions()
											{
												#run_action_list,name=generator,if=combo_points<4|(talent.anticipation.enabled&anticipation_charges<3&debuff.find_weakness.down)
												if ComboPoints() < 4 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 3 and target.DebuffExpires(find_weakness_debuff) SubtletyGeneratorCdActions()

												unless { ComboPoints() < 4 or Talent(anticipation_talent) and BuffStacks(anticipation_buff) < 3 and target.DebuffExpires(find_weakness_debuff) } and SubtletyGeneratorCdPostConditions()
												{
													#run_action_list,name=pool
													SubtletyPoolCdActions()
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

### actions.finisher

AddFunction SubtletyFinisherMainActions
{
	#rupture,cycle_targets=1,if=(!ticking|remains<duration*0.3|(buff.shadow_reflection.remains>8&dot.rupture.remains<12&time>20))
	if not target.DebuffPresent(rupture_debuff) or target.DebuffRemaining(rupture_debuff) < BaseDuration(rupture_debuff) * 0.3 or BuffRemaining(shadow_reflection_buff) > 8 and target.DebuffRemaining(rupture_debuff) < 12 and TimeInCombat() > 20 Spell(rupture)
	#slice_and_dice,if=((buff.slice_and_dice.remains<10.8&debuff.find_weakness.down)|buff.slice_and_dice.remains<6)&buff.slice_and_dice.remains<target.time_to_die
	if { BuffRemaining(slice_and_dice_buff) < 10.8 and target.DebuffExpires(find_weakness_debuff) or BuffRemaining(slice_and_dice_buff) < 6 } and BuffRemaining(slice_and_dice_buff) < target.TimeToDie() Spell(slice_and_dice)
	#death_from_above
	Spell(death_from_above)
	#crimson_tempest,if=(spell_targets.crimson_tempest>=2&debuff.find_weakness.down)|spell_targets.crimson_tempest>=3&(cooldown.death_from_above.remains>0|!talent.death_from_above.enabled)
	if Enemies() >= 2 and target.DebuffExpires(find_weakness_debuff) or Enemies() >= 3 and { SpellCooldown(death_from_above) > 0 or not Talent(death_from_above_talent) } Spell(crimson_tempest)
	#eviscerate,if=(energy.time_to_max<=cooldown.death_from_above.remains+action.death_from_above.execute_time)|!talent.death_from_above.enabled
	if TimeToMaxEnergy() <= SpellCooldown(death_from_above) + ExecuteTime(death_from_above) or not Talent(death_from_above_talent) Spell(eviscerate)
}

AddFunction SubtletyFinisherShortCdPostConditions
{
	{ not target.DebuffPresent(rupture_debuff) or target.DebuffRemaining(rupture_debuff) < BaseDuration(rupture_debuff) * 0.3 or BuffRemaining(shadow_reflection_buff) > 8 and target.DebuffRemaining(rupture_debuff) < 12 and TimeInCombat() > 20 } and Spell(rupture) or { BuffRemaining(slice_and_dice_buff) < 10.8 and target.DebuffExpires(find_weakness_debuff) or BuffRemaining(slice_and_dice_buff) < 6 } and BuffRemaining(slice_and_dice_buff) < target.TimeToDie() and Spell(slice_and_dice) or Spell(death_from_above) or { Enemies() >= 2 and target.DebuffExpires(find_weakness_debuff) or Enemies() >= 3 and { SpellCooldown(death_from_above) > 0 or not Talent(death_from_above_talent) } } and Spell(crimson_tempest) or { TimeToMaxEnergy() <= SpellCooldown(death_from_above) + ExecuteTime(death_from_above) or not Talent(death_from_above_talent) } and Spell(eviscerate)
}

AddFunction SubtletyFinisherCdActions
{
	unless { not target.DebuffPresent(rupture_debuff) or target.DebuffRemaining(rupture_debuff) < BaseDuration(rupture_debuff) * 0.3 or BuffRemaining(shadow_reflection_buff) > 8 and target.DebuffRemaining(rupture_debuff) < 12 and TimeInCombat() > 20 } and Spell(rupture) or { BuffRemaining(slice_and_dice_buff) < 10.8 and target.DebuffExpires(find_weakness_debuff) or BuffRemaining(slice_and_dice_buff) < 6 } and BuffRemaining(slice_and_dice_buff) < target.TimeToDie() and Spell(slice_and_dice) or Spell(death_from_above) or { Enemies() >= 2 and target.DebuffExpires(find_weakness_debuff) or Enemies() >= 3 and { SpellCooldown(death_from_above) > 0 or not Talent(death_from_above_talent) } } and Spell(crimson_tempest) or { TimeToMaxEnergy() <= SpellCooldown(death_from_above) + ExecuteTime(death_from_above) or not Talent(death_from_above_talent) } and Spell(eviscerate)
	{
		#run_action_list,name=pool
		SubtletyPoolCdActions()
	}
}

AddFunction SubtletyFinisherCdPostConditions
{
	{ not target.DebuffPresent(rupture_debuff) or target.DebuffRemaining(rupture_debuff) < BaseDuration(rupture_debuff) * 0.3 or BuffRemaining(shadow_reflection_buff) > 8 and target.DebuffRemaining(rupture_debuff) < 12 and TimeInCombat() > 20 } and Spell(rupture) or { BuffRemaining(slice_and_dice_buff) < 10.8 and target.DebuffExpires(find_weakness_debuff) or BuffRemaining(slice_and_dice_buff) < 6 } and BuffRemaining(slice_and_dice_buff) < target.TimeToDie() and Spell(slice_and_dice) or Spell(death_from_above) or { Enemies() >= 2 and target.DebuffExpires(find_weakness_debuff) or Enemies() >= 3 and { SpellCooldown(death_from_above) > 0 or not Talent(death_from_above_talent) } } and Spell(crimson_tempest) or { TimeToMaxEnergy() <= SpellCooldown(death_from_above) + ExecuteTime(death_from_above) or not Talent(death_from_above_talent) } and Spell(eviscerate)
}

### actions.generator

AddFunction SubtletyGeneratorMainActions
{
	#pool_resource,for_next=1
	#ambush
	Spell(ambush)
	unless SpellUsable(ambush) and SpellCooldown(ambush) < TimeToEnergyFor(ambush)
	{
		#fan_of_knives,if=spell_targets.fan_of_knives>2
		if Enemies() > 2 Spell(fan_of_knives)
		#backstab,if=debuff.find_weakness.up|buff.archmages_greater_incandescence_agi.up|trinket.stat.any.up
		if target.DebuffPresent(find_weakness_debuff) or BuffPresent(archmages_greater_incandescence_agi_buff) or BuffPresent(trinket_stat_any_buff) Spell(backstab)
		#shuriken_toss,if=energy<65&energy.regen<16
		if Energy() < 65 and EnergyRegenRate() < 16 Spell(shuriken_toss)
		#hemorrhage,if=glyph.hemorrhaging_veins.enabled&((talent.anticipation.enabled&combo_points+anticipation_charges<=2)|combo_points<=2)&!ticking&!dot.rupture.ticking&!dot.crimson_tempest.ticking&!dot.garrote.ticking
		if Glyph(glyph_of_hemorrhaging_veins) and { Talent(anticipation_talent) and ComboPoints() + BuffStacks(anticipation_buff) <= 2 or ComboPoints() <= 2 } and not target.DebuffPresent(hemorrhage_debuff) and not target.DebuffPresent(rupture_debuff) and not target.DebuffPresent(crimson_tempest_debuff) and not target.DebuffPresent(garrote_debuff) Spell(hemorrhage)
		#backstab,if=energy.time_to_max<=gcd*2
		if TimeToMaxEnergy() <= GCD() * 2 Spell(backstab)
		#hemorrhage,if=energy.time_to_max<=gcd*1.5&position_front
		if TimeToMaxEnergy() <= GCD() * 1.5 and False(position_front) Spell(hemorrhage)
	}
}

AddFunction SubtletyGeneratorShortCdActions
{
	#pool_resource,for_next=1
	#ambush
	unless SpellUsable(ambush) and SpellCooldown(ambush) < TimeToEnergyFor(ambush)
	{
		#auto_attack
		SubtletyGetInMeleeRange()
	}
}

AddFunction SubtletyGeneratorCdActions
{
	#run_action_list,name=pool,if=buff.master_of_subtlety.down&buff.shadow_dance.down&(energy+set_bonus.tier17_2pc*50+cooldown.shadow_dance.remains*energy.regen<=energy.max|energy+15+cooldown.vanish.remains*energy.regen<=energy.max)
	if BuffExpires(master_of_subtlety_buff) and BuffExpires(shadow_dance_buff) and { Energy() + ArmorSetBonus(T17 2) * 50 + SpellCooldown(shadow_dance) * EnergyRegenRate() <= MaxEnergy() or Energy() + 15 + SpellCooldown(vanish) * EnergyRegenRate() <= MaxEnergy() } SubtletyPoolCdActions()
	#pool_resource,for_next=1
	#ambush
	unless SpellUsable(ambush) and SpellCooldown(ambush) < TimeToEnergyFor(ambush)
	{
		unless Enemies() > 2 and Spell(fan_of_knives) or { target.DebuffPresent(find_weakness_debuff) or BuffPresent(archmages_greater_incandescence_agi_buff) or BuffPresent(trinket_stat_any_buff) } and Spell(backstab) or Energy() < 65 and EnergyRegenRate() < 16 and Spell(shuriken_toss) or Glyph(glyph_of_hemorrhaging_veins) and { Talent(anticipation_talent) and ComboPoints() + BuffStacks(anticipation_buff) <= 2 or ComboPoints() <= 2 } and not target.DebuffPresent(hemorrhage_debuff) and not target.DebuffPresent(rupture_debuff) and not target.DebuffPresent(crimson_tempest_debuff) and not target.DebuffPresent(garrote_debuff) and Spell(hemorrhage) or TimeToMaxEnergy() <= GCD() * 2 and Spell(backstab) or TimeToMaxEnergy() <= GCD() * 1.5 and False(position_front) and Spell(hemorrhage)
		{
			#run_action_list,name=pool
			SubtletyPoolCdActions()
		}
	}
}

AddFunction SubtletyGeneratorCdPostConditions
{
	not { SpellUsable(ambush) and SpellCooldown(ambush) < TimeToEnergyFor(ambush) } and { Enemies() > 2 and Spell(fan_of_knives) or { target.DebuffPresent(find_weakness_debuff) or BuffPresent(archmages_greater_incandescence_agi_buff) or BuffPresent(trinket_stat_any_buff) } and Spell(backstab) or Energy() < 65 and EnergyRegenRate() < 16 and Spell(shuriken_toss) or Glyph(glyph_of_hemorrhaging_veins) and { Talent(anticipation_talent) and ComboPoints() + BuffStacks(anticipation_buff) <= 2 or ComboPoints() <= 2 } and not target.DebuffPresent(hemorrhage_debuff) and not target.DebuffPresent(rupture_debuff) and not target.DebuffPresent(crimson_tempest_debuff) and not target.DebuffPresent(garrote_debuff) and Spell(hemorrhage) or TimeToMaxEnergy() <= GCD() * 2 and Spell(backstab) or TimeToMaxEnergy() <= GCD() * 1.5 and False(position_front) and Spell(hemorrhage) }
}

### actions.pool

AddFunction SubtletyPoolCdActions
{
	#preparation,if=!buff.vanish.up&!buff.shadow_dance.up&cooldown.vanish.remains>45
	if not BuffPresent(vanish_buff) and not BuffPresent(shadow_dance_buff) and SpellCooldown(vanish) > 45 Spell(preparation)
}

### actions.precombat

AddFunction SubtletyPrecombatMainActions
{
	#flask,type=greater_draenic_agility_flask
	#food,type=salty_squid_roll
	#apply_poison,lethal=deadly
	if BuffRemaining(lethal_poison_buff) < 1200 Spell(deadly_poison)
	#stealth
	Spell(stealth)
	#premeditation,if=!talent.marked_for_death.enabled
	if not Talent(marked_for_death_talent) and ComboPoints() < 5 Spell(premeditation)
	#slice_and_dice,if=buff.slice_and_dice.remains<18
	if BuffRemaining(slice_and_dice_buff) < 18 Spell(slice_and_dice)
	#premeditation
	if ComboPoints() < 5 Spell(premeditation)
}

AddFunction SubtletyPrecombatShortCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth)
	{
		#marked_for_death
		Spell(marked_for_death)
	}
}

AddFunction SubtletyPrecombatShortCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth) or BuffRemaining(slice_and_dice_buff) < 18 and Spell(slice_and_dice)
}

AddFunction SubtletyPrecombatCdActions
{
	unless BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison)
	{
		#snapshot_stats
		#potion,name=draenic_agility
		SubtletyUsePotionAgility()
	}
}

AddFunction SubtletyPrecombatCdPostConditions
{
	BuffRemaining(lethal_poison_buff) < 1200 and Spell(deadly_poison) or Spell(stealth) or BuffRemaining(slice_and_dice_buff) < 18 and Spell(slice_and_dice)
}

### Subtlety icons.

AddCheckBox(opt_rogue_subtlety_aoe L(AOE) default specialization=subtlety)

AddIcon checkbox=!opt_rogue_subtlety_aoe enemies=1 help=shortcd specialization=subtlety
{
	if not InCombat() SubtletyPrecombatShortCdActions()
	unless not InCombat() and SubtletyPrecombatShortCdPostConditions()
	{
		SubtletyDefaultShortCdActions()
	}
}

AddIcon checkbox=opt_rogue_subtlety_aoe help=shortcd specialization=subtlety
{
	if not InCombat() SubtletyPrecombatShortCdActions()
	unless not InCombat() and SubtletyPrecombatShortCdPostConditions()
	{
		SubtletyDefaultShortCdActions()
	}
}

AddIcon enemies=1 help=main specialization=subtlety
{
	if not InCombat() SubtletyPrecombatMainActions()
	SubtletyDefaultMainActions()
}

AddIcon checkbox=opt_rogue_subtlety_aoe help=aoe specialization=subtlety
{
	if not InCombat() SubtletyPrecombatMainActions()
	SubtletyDefaultMainActions()
}

AddIcon checkbox=!opt_rogue_subtlety_aoe enemies=1 help=cd specialization=subtlety
{
	if not InCombat() SubtletyPrecombatCdActions()
	unless not InCombat() and SubtletyPrecombatCdPostConditions()
	{
		SubtletyDefaultCdActions()
	}
}

AddIcon checkbox=opt_rogue_subtlety_aoe help=cd specialization=subtlety
{
	if not InCombat() SubtletyPrecombatCdActions()
	unless not InCombat() and SubtletyPrecombatCdPostConditions()
	{
		SubtletyDefaultCdActions()
	}
}

### Required symbols
# ambush
# anticipation_buff
# anticipation_talent
# arcane_torrent_energy
# archmages_greater_incandescence_agi_buff
# backstab
# berserking
# blood_fury_ap
# cheap_shot
# crimson_tempest
# crimson_tempest_debuff
# deadly_poison
# deadly_throw
# death_from_above
# death_from_above_talent
# deathly_shadows_buff
# draenic_agility_potion
# eviscerate
# fan_of_knives
# find_weakness_debuff
# garrote
# garrote_debuff
# glyph_of_hemorrhaging_veins
# hemorrhage
# hemorrhage_debuff
# honor_among_thieves_cooldown_buff
# kick
# kidney_shot
# legendary_ring_agility
# lethal_poison_buff
# marked_for_death
# marked_for_death_talent
# master_of_subtlety_buff
# premeditation
# preparation
# quaking_palm
# rupture
# rupture_debuff
# shadow_dance
# shadow_dance_buff
# shadow_focus_talent
# shadow_reflection
# shadow_reflection_buff
# shadow_reflection_talent
# shadowmeld
# shadowstep
# shuriken_toss
# slice_and_dice
# slice_and_dice_buff
# stealth
# subterfuge_buff
# subterfuge_talent
# vanish
# vanish_buff
]]
	OvaleScripts:RegisterScript("ROGUE", "subtlety", name, desc, code, "script")
end
